{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/color_picker/ColorPicker.ts","src/dependencies/TranslateFilter.ts","src/image_slider/ImageSlider.ts","src/image_slider/ImageSliderService.ts","src/image_slider/SliderButton.ts","src/image_slider/SliderIndicator.ts","src/image_slider/index.ts","src/index.ts","src/markdown/Markdown.ts","src/popover/Popover.ts","src/popover/PopoverService.ts","src/popover/index.ts","src/progress/RoutingProgress.ts","src/toast/Toast.ts","src/toast/ToastService.ts","temp/pip-webui-controls-html.min.js","src/toast/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","controls","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","ColorPickerBindings","ngDisabled","colors","currentColor","colorChange","DEFAULT_COLORS_1","ColorPickerChanges","ColorPickerController","$scope","$element","$attrs","$timeout","class","$inject","prototype","$onChanges","changes","_","isArray","currentValue","currentColorIndex","indexOf","selectColor","index","_this","$apply","enterSpacePress","event","pipColorPicker","bindings","templateUrl","controller","component","2","translateFilter","$injector","pipTranslate","has","get","key","defineProperty","value","pipImageSliderController_1","$parse","$interval","pipImageSlider","_index","DEFAULT_INTERVAL","swipeStart","_type","type","_interval","interval","slideTo","slideToPrivate","addClass","setIndex","_blocks","find","$","startInterval","_throttled","throttle","toBlock","_newIndex","_direction","id","registerSlider","$on","stopInterval","removeSlider","$onInit","nextBlock","restartInterval","prevBlock","nextIndex","pipImageIndex","sliderIndex","_timePromises","Number","cancel","bindToController","controllerAs","4","ImageSliderService","ANIMATION_DURATION","_sliders","sliderId","sliderScope","getSliderScope","nextCarousel","removeClass","prevCarousel","blocks","oldIndex","direction","blockIndex","5","on","vm","scope","SliderButtonController_1","directive","SliderButton","css","undefined","SliderIndicatorController_1","SliderIndicator","7","Object","./ImageSlider","./ImageSliderService","./SliderButton","./SliderIndicator","8","./dependencies/TranslateFilter","./image_slider","./markdown/Markdown","./popover","./progress/RoutingProgress","./toast","9","setTranslations","MARKDOWN_ATTACHMENTS","checklist","documents","pictures","location","time","ConfigTranslations","MarkdownBindings","text","isList","clamp","rebind","MarkdownController","MarkdownChanges","_pipTranslate","$postLink","bindText","_text","_$scope","newText","describeAttachments","array","attachTypes","attach","attachString","translate","push","textString","isClamped","height","options","obj","item","isNumber","gfm","tables","breaks","sanitize","pedantic","smartLists","smartypents","marked","html","attr","append","MarkdownComponent","run","PopoverController","$rootScope","$compile","$templateRequest","backdropClick","backdropElement","params","responsive","extend","locals","template","content","init","then","calcHeight","onResize","resize","cancelCallback","closePopover","remove","onPopoverClick","stopPropagation","focus","timeout","position","element","pos","offset","width","docWidth","document","docHeight","popover","left","top","title","footer","contentHeight","outerHeight","Math","max","Popover","PopoverService","popoverTemplate","show","p","hide","$new","isObject","service","./PopoverService","13","logoUrl","RoutingController","_image","loadProgressImage","RoutingBindings","angular","Toast","ToastController_1","$mdToast","toast","_pipErrorDetailsDialog","message","actions","actionLenght","toString","showDetails","onDetails","error","ok","noop","onMessageClick","onAction","action","ToastService","SHOW_TIMEOUT","SHOW_TIMEOUT_NOTIFICATIONS","toasts","sounds","onStateChangeSuccess","onClearToasts","showNextToast","splice","showToast","currentToast","hideDelay","duration","showToastOkResult","showToastCancelResult","successCallback","addToast","removeToasts","result","each","cloneDeep","removeToastsById","getToastById","clearToasts","showNotification","showMessage","showError","showClickableError","hideAllToasts","16","./Toast","./ToastService","17","$templateCache","put"],"mappings":"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","file":"pip-webui-controls.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\r\n    interface IColorPickerBindings {\r\n        [key: string]: any;\r\n\r\n        ngDisabled: any;\r\n        colors: any;\r\n        currentColor: any;\r\n        colorChange: any;\r\n    }\r\n\r\n    interface IColorPickerAttributes extends ng.IAttributes {\r\n        class: string;\r\n    }\r\n\r\n    const ColorPickerBindings: IColorPickerBindings = {\r\n        ngDisabled: '<?ngDisabled',\r\n        colors: '<pipColors',\r\n        currentColor: '=ngModel',\r\n        colorChange: '&?ngChange'\r\n    }\r\n\r\n    class ColorPickerChanges implements ng.IOnChangesObject, IColorPickerBindings {\r\n        [key: string]: ng.IChangesObject < any > ;\r\n\r\n        colorChange: ng.IChangesObject < () => ng.IPromise < any >> ;\r\n        currentColor: any;\r\n\r\n        ngDisabled: ng.IChangesObject < boolean > ;\r\n        colors: ng.IChangesObject < string[] > ;\r\n    }\r\n\r\n    const DEFAULT_COLORS = ['purple', 'lightgreen', 'green', 'darkred', 'pink', 'yellow', 'cyan'];\r\n\r\n    class ColorPickerController implements IColorPickerBindings {\r\n        public class: string;\r\n        public colors: string[];\r\n        public currentColor: string;\r\n        public currentColorIndex: number;\r\n        public ngDisabled: boolean;\r\n        public colorChange: Function;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            private $element: JQuery,\r\n            $attrs: IColorPickerAttributes,\r\n            private $timeout: ng.ITimeoutService\r\n        ) { \r\n            \"ngInject\";\r\n            this.class = $attrs.class || ''; \r\n        }\r\n\r\n        public $onChanges(changes: ColorPickerChanges) {\r\n            this.colors = changes.colors && _.isArray(changes.colors.currentValue) && changes.colors.currentValue.length !== 0 ?\r\n                changes.colors.currentValue : DEFAULT_COLORS;\r\n            this.currentColor = this.currentColor || this.colors[0];\r\n            this.currentColorIndex = this.colors.indexOf(this.currentColor);\r\n\r\n            this.ngDisabled = changes.ngDisabled.currentValue;\r\n        }\r\n\r\n        public selectColor(index: number) {\r\n            if (this.ngDisabled) {\r\n                return;\r\n            }\r\n            this.currentColorIndex = index;\r\n            this.currentColor = this.colors[this.currentColorIndex];\r\n            this.$timeout(() => {\r\n                this.$scope.$apply();\r\n            });\r\n\r\n            if (this.colorChange) {\r\n                this.colorChange();\r\n            }\r\n        };\r\n\r\n        public enterSpacePress(event): void {\r\n            this.selectColor(event.index);\r\n        };\r\n\r\n    }\r\n\r\n    const pipColorPicker: ng.IComponentOptions = {\r\n        bindings: ColorPickerBindings,\r\n        templateUrl: 'color_picker/ColorPicker.html',\r\n        controller: ColorPickerController\r\n    }\r\n\r\n    angular\r\n        .module('pipColorPicker', ['pipControls.Templates'])\r\n        .component('pipColorPicker', pipColorPicker);\r\n\r\n}","{\r\n    function translateFilter($injector: ng.auto.IInjectorService) {\r\n        \"ngInject\";\r\n        const pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key: string) {\r\n            return pipTranslate ? pipTranslate['translate'](key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipControls.Translate', [])\r\n        .filter('translate', translateFilter);\r\n}\r\n","import { IImageSliderService } from './IImageSliderService';\r\n\r\n{\r\n    class pipImageSliderController implements ng.IController {\r\n        private _blocks: any[];\r\n        private _index: number = 0;\r\n        private _newIndex: number;\r\n        private _direction: string;\r\n        private _type: string;\r\n        private DEFAULT_INTERVAL: number = 4500;\r\n        private _interval: number | string;\r\n        private _timePromises;\r\n        private _throttled: Function;\r\n\r\n        public swipeStart: number = 0;\r\n        public sliderIndex: number;\r\n        public slideTo: Function;\r\n        public type: Function;\r\n        public interval: Function;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            private $element: JQuery,\r\n            private $attrs,\r\n            private $parse: ng.IParseService,\r\n            private $timeout: angular.ITimeoutService,\r\n            private $interval: angular.IIntervalService,\r\n            private pipImageSlider: IImageSliderService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            //this.sliderIndex = $scope['vm']['sliderIndex'];\r\n            this._type = this.type();\r\n            this._interval = this.interval();\r\n            this.slideTo = this.slideToPrivate;\r\n\r\n            $element.addClass('pip-image-slider');\r\n            $element.addClass('pip-animation-' + this._type);\r\n\r\n            this.setIndex();\r\n\r\n            $timeout(() => {\r\n                this._blocks = <any>$element.find('.pip-animation-block');\r\n                if (this._blocks.length > 0) {\r\n                    $(this._blocks[0]).addClass('pip-show');\r\n                }\r\n            });\r\n\r\n            this.startInterval();\r\n\r\n            this._throttled = _.throttle(() => {\r\n                pipImageSlider.toBlock(this._type, this._blocks, this._index, this._newIndex, this._direction);\r\n                this._index = this._newIndex;\r\n                this.setIndex();\r\n            }, 700);\r\n\r\n            if ($attrs.id) {\r\n                pipImageSlider.registerSlider($attrs.id, $scope)\r\n            }\r\n\r\n            $scope.$on('$destroy', () => {\r\n                this.stopInterval();\r\n                pipImageSlider.removeSlider($attrs.id);\r\n            });\r\n\r\n        }\r\n\r\n        $onInit() { }\r\n\r\n        public nextBlock() {\r\n            this.restartInterval();\r\n            this._newIndex = this._index + 1 === this._blocks.length ? 0 : this._index + 1;\r\n            this._direction = 'next';\r\n            this._throttled();\r\n        }\r\n\r\n        public prevBlock() {\r\n            this.restartInterval();\r\n            this._newIndex = this._index - 1 < 0 ? this._blocks.length - 1 : this._index - 1;\r\n            this._direction = 'prev';\r\n            this._throttled();\r\n        }\r\n\r\n        private slideToPrivate(nextIndex: number) {\r\n            if (nextIndex === this._index || nextIndex > this._blocks.length - 1) {\r\n                return;\r\n            }\r\n\r\n            this.restartInterval();\r\n            this._newIndex = nextIndex;\r\n            this._direction = nextIndex > this._index ? 'next' : 'prev';\r\n            this._throttled();\r\n        }\r\n\r\n        private setIndex() {\r\n            if (this.$attrs.pipImageIndex) this.sliderIndex = this._index;\r\n        }\r\n\r\n        private startInterval() {\r\n            this._timePromises = this.$interval(() => {\r\n                this._newIndex = this._index + 1 === this._blocks.length ? 0 : this._index + 1;\r\n                this._direction = 'next';\r\n                this._throttled();\r\n            }, Number(this._interval || this.DEFAULT_INTERVAL));\r\n        }\r\n\r\n        private stopInterval() {\r\n            this.$interval.cancel(this._timePromises);\r\n        }\r\n\r\n        private restartInterval() {\r\n            this.stopInterval();\r\n            this.startInterval();\r\n        }\r\n    }\r\n\r\n    const ImageSlider = function (): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                sliderIndex: '=pipImageIndex',\r\n                type: '&pipAnimationType',\r\n                interval: '&pipAnimationInterval'\r\n            },\r\n            bindToController: true,\r\n            controller: pipImageSliderController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n    angular.module('pipImageSlider')\r\n        .directive('pipImageSlider', ImageSlider);\r\n}","import { IImageSliderService } from './IImageSliderService';\r\n\r\n{\r\n    class ImageSliderService implements IImageSliderService {\r\n        private ANIMATION_DURATION: number = 550;\r\n        private _sliders: Object = {};\r\n\r\n        constructor(\r\n            private $timeout: angular.ITimeoutService\r\n        ) { \"ngInject\"; }\r\n\r\n        public registerSlider(sliderId: string, sliderScope: ng.IScope): void {\r\n            this._sliders[sliderId] = sliderScope;\r\n        }\r\n\r\n        public removeSlider(sliderId: string): void {\r\n            delete this._sliders[sliderId];\r\n        }\r\n\r\n        public getSliderScope(sliderId: string) {\r\n            return this._sliders[sliderId];\r\n        }\r\n\r\n        public nextCarousel(nextBlock: JQuery, prevBlock: JQuery): void {\r\n            nextBlock.addClass('pip-next');\r\n\r\n            this.$timeout(() => {\r\n                nextBlock.addClass('animated').addClass('pip-show').removeClass('pip-next');\r\n                prevBlock.addClass('animated').removeClass('pip-show');\r\n            }, 100);\r\n        }\r\n\r\n        public prevCarousel(nextBlock: JQuery, prevBlock: JQuery): void {\r\n            this.$timeout(() => {\r\n                nextBlock.addClass('animated').addClass('pip-show');\r\n                prevBlock.addClass('animated').addClass('pip-next').removeClass('pip-show');\r\n            }, 100);\r\n        }\r\n\r\n        public toBlock(type: string, blocks: any[], oldIndex: number, nextIndex: number, direction: string): void {\r\n            const prevBlock = $(blocks[oldIndex]),\r\n                blockIndex = nextIndex,\r\n                nextBlock = $(blocks[blockIndex]);\r\n\r\n            if (type === 'carousel') {\r\n                $(blocks).removeClass('pip-next').removeClass('pip-prev').removeClass('animated');\r\n\r\n                if (direction && (direction === 'prev' || direction === 'next')) {\r\n                    if (direction === 'prev') {\r\n                        this.prevCarousel(nextBlock, prevBlock);\r\n                    } else {\r\n                        this.nextCarousel(nextBlock, prevBlock);\r\n                    }\r\n                } else {\r\n                    if (nextIndex && nextIndex < oldIndex) {\r\n                        this.prevCarousel(nextBlock, prevBlock);\r\n                    } else {\r\n                        this.nextCarousel(nextBlock, prevBlock);\r\n                    }\r\n                }\r\n            } else {\r\n                prevBlock.addClass('animated').removeClass('pip-show');\r\n                nextBlock.addClass('animated').addClass('pip-show');\r\n            }\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipImageSlider.Service', [])\r\n        .service('pipImageSlider', ImageSliderService);\r\n}","import { IImageSliderService } from './IImageSliderService';\r\n\r\n{\r\n    class SliderButtonController implements ng.IController {\r\n        public direction: Function;\r\n        public sliderId: Function;\r\n\r\n        constructor(\r\n            $element: JQuery,\r\n            pipImageSlider: IImageSliderService\r\n        ) {\r\n            \"ngInject\";\r\n            $element.on('click', () => {\r\n                if (!this.sliderId() || !this.direction()) {\r\n                    return;\r\n                }\r\n\r\n                pipImageSlider.getSliderScope(this.sliderId()).vm[this.direction() + 'Block']();\r\n            });\r\n        }\r\n\r\n        $onInit() { }\r\n    }\r\n\r\n    const SliderButton = function (): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                direction: '&pipButtonType',\r\n                sliderId: '&pipSliderId'\r\n            },\r\n            controllerAs: '$ctlr',\r\n            bindToController: true,\r\n            controller: SliderButtonController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSliderButton', ['pipImageSlider.Service'])\r\n        .directive('pipSliderButton', SliderButton);\r\n\r\n}","import { IImageSliderService } from './IImageSliderService';\r\n\r\n{\r\n    class SliderIndicatorController implements ng.IController {\r\n        public slideTo: Function;\r\n        public sliderId: Function;\r\n\r\n        constructor(\r\n            $element: JQuery,\r\n            pipImageSlider: IImageSliderService\r\n        ) {\r\n            \"ngInject\";\r\n            $element.css('cursor', 'pointer');\r\n            $element.on('click', () => {\r\n                if (!this.sliderId() || this.slideTo() === undefined) {\r\n                    return;\r\n                }\r\n\r\n                pipImageSlider.getSliderScope(this.sliderId()).vm.slideTo(this.slideTo());\r\n            });\r\n        }\r\n\r\n        $onInit() { }\r\n    }\r\n\r\n    const SliderIndicator = function (): ng.IDirective {\r\n        return {\r\n            scope: {\r\n                slideTo: '&pipSlideTo',\r\n                sliderId: '&pipSliderId'\r\n            },\r\n            controllerAs: '$ctlr',\r\n            bindToController: true,\r\n            controller: SliderIndicatorController\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipSliderIndicator', ['pipImageSlider.Service'])\r\n        .directive('pipSliderIndicator', SliderIndicator);\r\n}","angular\r\n    .module('pipImageSlider', ['pipSliderButton', 'pipSliderIndicator', 'pipImageSlider.Service']);\r\n\r\nimport './ImageSlider';\r\nimport './ImageSliderService';\r\nimport './SliderButton';\r\nimport './SliderIndicator';\r\n\r\nexport * from './IImageSliderService';","﻿import './dependencies/TranslateFilter';\r\nimport './color_picker/ColorPicker';\r\nimport './image_slider';\r\nimport './markdown/Markdown';\r\nimport './popover';\r\nimport './progress/RoutingProgress';\r\nimport './toast';\r\n\r\nangular.module('pipControls', [\r\n    'pipMarkdown',\r\n    'pipColorPicker',\r\n    'pipRoutingProgress',\r\n    'pipPopover',\r\n    'pipImageSlider',\r\n    'pipToasts',\r\n    'pipControls.Translate'\r\n]);\r\n\r\nexport * from './image_slider';\r\nexport * from './popover';\r\nexport * from './toast';","declare var marked: any;\r\n\r\n{\r\n  const ConfigTranslations = ($injector: ng.auto.IInjectorService) => {\r\n        \"ngInject\";\r\n        const pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            (<any>pipTranslate).setTranslations('en', {\r\n                'MARKDOWN_ATTACHMENTS': 'Attachments:',\r\n                'checklist': 'Checklist',\r\n                'documents': 'Documents',\r\n                'pictures': 'Pictures',\r\n                'location': 'Location',\r\n                'time': 'Time'\r\n            });\r\n            (<any>pipTranslate).setTranslations('ru', {\r\n                'MARKDOWN_ATTACHMENTS': 'Вложения:',\r\n                'checklist': 'Список',\r\n                'documents': 'Документы',\r\n                'pictures': 'Изображения',\r\n                'location': 'Местонахождение',\r\n                'time': 'Время'\r\n            });\r\n        }\r\n    }\r\n\r\n    interface IMarkdownBindings {\r\n        [key: string]: any;\r\n\r\n        text: any;\r\n        isList: any;\r\n        clamp: any;\r\n        rebind: any;\r\n    }\r\n\r\n    const MarkdownBindings: IMarkdownBindings = {\r\n        text: '<pipText',\r\n        isList: '<?pipList',\r\n        clamp: '<?pipLineCount',\r\n        rebind: '<?pipRebind'\r\n    }\r\n\r\n    class MarkdownChanges implements ng.IOnChangesObject, IMarkdownBindings {\r\n        [key: string]: ng.IChangesObject < any > ;\r\n\r\n        text: ng.IChangesObject < string > ;\r\n        isList: ng.IChangesObject < boolean > ;\r\n        clamp: ng.IChangesObject < number | string > ;\r\n        rebind: ng.IChangesObject < boolean > ;\r\n    }\r\n\r\n    class MarkdownController implements IMarkdownBindings, ng.IController {\r\n        private _pipTranslate;\r\n\r\n        public text: string;\r\n        public isList: boolean;\r\n        public clamp: string | number;\r\n        public rebind: boolean;\r\n\r\n        constructor(\r\n            private $scope: angular.IScope,\r\n            private $element: JQuery,\r\n            $injector: ng.auto.IInjectorService\r\n        ) {\r\n            \"ngInject\";\r\n            this._pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n        }\r\n\r\n        public $postLink() {\r\n            // Fill the text\r\n            this.bindText(this.text);\r\n\r\n            this.$scope.$on('pipWindowResized', function () {\r\n                if (this.bindText) this.bindText(this._text(this._$scope));\r\n            });\r\n\r\n            // Add class\r\n            this.$element.addClass('pip-markdown');\r\n\r\n        }\r\n\r\n        public $onChanges(changes: MarkdownChanges) {\r\n            const newText = changes.text.currentValue;\r\n\r\n            if (this.rebind) {\r\n                this.text = newText;\r\n                this.bindText(this.text);\r\n            }\r\n        }\r\n\r\n        private describeAttachments(array) {\r\n            var attachString = '',\r\n                attachTypes = [];\r\n\r\n            _.each(array, function (attach) {\r\n                if (attach.type && attach.type !== 'text') {\r\n                    if (attachString.length === 0 && this._pipTranslate) {\r\n                        attachString = this._pipTranslate.translate('MARKDOWN_ATTACHMENTS');\r\n                    }\r\n\r\n                    if (attachTypes.indexOf(attach.type) < 0) {\r\n                        attachTypes.push(attach.type);\r\n                        attachString += attachTypes.length > 1 ? ', ' : ' ';\r\n                        if (this._pipTranslate)\r\n                            attachString += this._pipTranslate.translate(attach.type);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return attachString;\r\n        }\r\n\r\n        private bindText(value) {\r\n            let textString, isClamped, height, options, obj;\r\n\r\n            if (_.isArray(value)) {\r\n                obj = _.find(value, function (item: any) {\r\n                    return item.type === 'text' && item.text;\r\n                });\r\n\r\n                textString = obj ? obj.text : this.describeAttachments(value);\r\n            } else {\r\n                textString = value;\r\n            }\r\n\r\n            isClamped = this.clamp && _.isNumber(this.clamp);\r\n            isClamped = isClamped && textString && textString.length > 0;\r\n            options = {\r\n                gfm: true,\r\n                tables: true,\r\n                breaks: true,\r\n                sanitize: true,\r\n                pedantic: true,\r\n                smartLists: true,\r\n                smartypents: false\r\n            };\r\n            textString = marked(textString || '', options);\r\n            if (isClamped) {\r\n                height = 1.5 * Number(this.clamp);\r\n            }\r\n            // Assign value as HTML\r\n            this.$element.html('<div' + (isClamped ? this.isList ? 'class=\"pip-markdown-content ' +\r\n                'pip-markdown-list\" style=\"max-height: ' + height + 'em\">' :\r\n                ' class=\"pip-markdown-content\" style=\"max-height: ' + height + 'em\">' : this.isList ?\r\n                ' class=\"pip-markdown-list\">' : '>') + textString + '</div>');\r\n            this.$element.find('a').attr('target', 'blank');\r\n            if (!this.isList && isClamped) {\r\n                this.$element.append('<div class=\"pip-gradient-block\"></div>');\r\n            }\r\n        }\r\n    }\r\n    const MarkdownComponent = {\r\n        controller: MarkdownController,\r\n        bindings: MarkdownBindings\r\n    }\r\n\r\n    angular\r\n        .module('pipMarkdown', ['ngSanitize'])\r\n        .run(ConfigTranslations)\r\n        .component('pipMarkdown', MarkdownComponent);\r\n}","{\r\n    interface IPopoverBindings {\r\n        [key: string]: any;\r\n\r\n        params: any;\r\n    }\r\n\r\n    const PopoverBindings: IPopoverBindings = {\r\n        params: '<pipParams'\r\n    }\r\n\r\n    class PopoverController implements IPopoverBindings, ng.IController {\r\n        private backdropElement;\r\n        private content;\r\n        public params: any;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $rootScope: ng.IRootScopeService,\r\n            $element: JQuery,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $compile: ng.ICompileService,\r\n            private $templateRequest: ng.ITemplateRequestService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this.backdropElement = $('.pip-popover-backdrop');\r\n            this.backdropElement.on('click keydown scroll', () => {\r\n                this.backdropClick();\r\n            });\r\n            this.backdropElement.addClass(this.params.responsive !== false ? 'pip-responsive' : '');\r\n\r\n            $timeout(() => {\r\n                this.position();\r\n                angular.extend($scope, this.params.locals);\r\n\r\n                if (this.params.template) {\r\n                    this.content = $compile(this.params.template)($scope);\r\n                    $element.find('.pip-popover').append(this.content);\r\n\r\n                    this.init();\r\n                } else {\r\n                    this.$templateRequest(this.params.templateUrl, false).then((html) => {\r\n                        this.content = $compile(html)($scope);\r\n                        $element.find('.pip-popover').append(this.content);\r\n\r\n                        this.init();\r\n                    });\r\n                }\r\n            });\r\n\r\n            $timeout(() => {\r\n                this.calcHeight();\r\n            }, 200);\r\n            $rootScope.$on('pipPopoverResize', () => {\r\n                this.onResize()\r\n            });\r\n            $(window).resize(() => {\r\n                this.onResize()\r\n            });\r\n        }\r\n\r\n        $onInit() { }\r\n\r\n        public backdropClick() {\r\n            if (this.params.cancelCallback) {\r\n                this.params.cancelCallback();\r\n            }\r\n            this.closePopover();\r\n        }\r\n\r\n        public closePopover() {\r\n            this.backdropElement.removeClass('opened');\r\n            this.$timeout(() => {\r\n                this.backdropElement.remove();\r\n            }, 100);\r\n        }\r\n\r\n        public onPopoverClick(event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        private init() {\r\n            this.backdropElement.addClass('opened');\r\n            $('.pip-popover-backdrop').focus();\r\n            if (this.params.timeout) {\r\n                this.$timeout(function () {\r\n                    this.closePopover();\r\n                }, this.params.timeout);\r\n            }\r\n        }\r\n\r\n        private position() {\r\n            if (this.params.element) {\r\n                let element = $(this.params.element),\r\n                    pos = element.offset(),\r\n                    width = element.width(),\r\n                    height = element.height(),\r\n                    docWidth = $(document).width(),\r\n                    docHeight = $(document).height(),\r\n                    popover = this.backdropElement.find('.pip-popover');\r\n\r\n                if (pos) {\r\n                    popover\r\n                        .css('max-width', docWidth - (docWidth - pos.left))\r\n                        .css('max-height', docHeight - (pos.top + height) - 32, 0)\r\n                        .css('left', pos.left - popover.width() + width / 2)\r\n                        .css('top', pos.top + height + 16);\r\n                }\r\n            }\r\n        }\r\n\r\n        private onResize() {\r\n            this.backdropElement.find('.pip-popover').find('.pip-content').css('max-height', '100%');\r\n            this.position();\r\n            this.calcHeight();\r\n        }\r\n\r\n        private calcHeight() {\r\n            if (this.params.calcHeight === false) {\r\n                return;\r\n            }\r\n            const popover = this.backdropElement.find('.pip-popover'),\r\n                title = popover.find('.pip-title'),\r\n                footer = popover.find('.pip-footer'),\r\n                content = popover.find('.pip-content'),\r\n                contentHeight = popover.height() - title.outerHeight(true) - footer.outerHeight(true);\r\n            content.css('max-height', Math.max(contentHeight, 0) + 'px').css('box-sizing', 'border-box');\r\n        }\r\n    }\r\n\r\n    const Popover: ng.IComponentOptions = {\r\n        bindings: PopoverBindings,\r\n        templateUrl: 'popover/Popover.html',\r\n        controller: PopoverController\r\n    }\r\n\r\n    angular\r\n        .module('pipPopover')\r\n        .component('pipPopover', Popover);\r\n}","import { IPopoverService } from './IPopoverService';\r\n\r\n{\r\n    interface PopoverTemplateScope extends ng.IScope {\r\n        params ? : any;\r\n        locals ? : any;\r\n    }\r\n\r\n    class PopoverService implements IPopoverService {\r\n        private popoverTemplate: string;\r\n\r\n        constructor(\r\n            private $compile: ng.ICompileService,\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $timeout: ng.ITimeoutService\r\n        ) {\r\n            \"ngInject\";\r\n            this.popoverTemplate = \"<div class='pip-popover-backdrop {{ params.class }}' ng-controller='params.controller'\" +\r\n                \" tabindex='1'> <pip-popover pip-params='params'> </pip-popover> </div>\";\r\n        }\r\n\r\n        public show(p: Object) {\r\n            let element: JQuery, scope: PopoverTemplateScope, params: any, content: ng.IRootElementService;\r\n\r\n            element = $('body');\r\n            if (element.find('md-backdrop').length > 0) {\r\n                return;\r\n            }\r\n            this.hide();\r\n            scope = this.$rootScope.$new();\r\n            params = p && _.isObject(p) ? p : {};\r\n            scope.params = params;\r\n            scope.locals = params.locals;\r\n            content = this.$compile(this.popoverTemplate)(scope);\r\n            element.append(content);\r\n        }\r\n\r\n        public hide() {\r\n            const backdropElement = $('.pip-popover-backdrop');\r\n            backdropElement.removeClass('opened');\r\n            this.$timeout(() => {\r\n                backdropElement.remove();\r\n            }, 100);\r\n        }\r\n\r\n        public resize() {\r\n            this.$rootScope.$broadcast('pipPopoverResize');\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipPopover.Service', [])\r\n        .service('pipPopoverService', PopoverService);\r\n}","angular.module('pipPopover', ['pipPopover.Service']);\r\n\r\nimport './Popover';\r\nimport './PopoverService';\r\n\r\nexport * from './IPopoverService';","{\r\n    interface IRoutingBindings {\r\n        [key: string]: any;\r\n\r\n        logoUrl: any;\r\n        showProgress: any;\r\n    }\r\n\r\n    const RoutingBindings: IRoutingBindings = {\r\n        showProgress: '&',\r\n        logoUrl: '@'\r\n    }\r\n\r\n    class RoutingController implements ng.IController, IRoutingBindings {\r\n        private _image: any;\r\n\r\n        public logoUrl: string;\r\n        public showProgress: Function;\r\n\r\n        constructor(\r\n            $scope: ng.IScope,\r\n            private $element: JQuery\r\n        ) { \"ngInject\"; }\r\n\r\n        public $postLink() {\r\n            this._image = this.$element.find('img');\r\n            this.loadProgressImage();\r\n        }\r\n\r\n        public loadProgressImage() {\r\n            if (this.logoUrl) {\r\n                this._image.attr('src', this.logoUrl);\r\n            }\r\n        }\r\n    }\r\n\r\n    const RoutingProgress: ng.IComponentOptions = {\r\n        bindings: RoutingBindings,\r\n        templateUrl: 'progress/RoutingProgress.html',\r\n        controller: RoutingController\r\n    }\r\n\r\n    angular\r\n        .module('pipRoutingProgress', ['ngMaterial'])\r\n        .component('pipRoutingProgress', RoutingProgress);\r\n}","export class Toast {\r\n    type: string;\r\n    id: string;\r\n    error: any;\r\n    message: string;\r\n    actions: string[];\r\n    duration: number;\r\n    successCallback: Function;\r\n    cancelCallback: Function\r\n}\r\n","import { Toast } from './Toast';\nimport { IToastService } from './IToastService';\n\n{\n    class ToastController {\n        private _pipErrorDetailsDialog;\n\n        public message: string;\n        public actions: string[];\n        public actionLenght: number;\n        public showDetails: boolean;\n\n        constructor(\n            private $mdToast: angular.material.IToastService,\n            public toast: Toast,\n            $injector: ng.auto.IInjectorService\n        ) {\n            \"ngInject\";\n\n            this._pipErrorDetailsDialog = $injector.has('pipErrorDetailsDialog') ?\n                $injector.get('pipErrorDetailsDialog') : null;\n            this.message = toast.message;\n            this.actions = toast.actions;\n\n            if (toast.actions.length === 0) {\n                this.actionLenght = 0;\n            } else {\n                this.actionLenght = toast.actions.length === 1 ? toast.actions[0].toString().length : null;\n            }\n\n            this.showDetails = this._pipErrorDetailsDialog != null;\n        }\n\n        public onDetails(): void {\n            this.$mdToast.hide();\n            if (this._pipErrorDetailsDialog) {\n                this._pipErrorDetailsDialog.show({\n                        error: this.toast.error,\n                        ok: 'Ok'\n                    },\n                    angular.noop,\n                    angular.noop\n                );\n            }\n        }\n\n        public onMessageClick(): void {\n            if (this.toast.type !== 'clickable_error' || !this.showDetails) return;\n            \n            this.$mdToast.hide();\n            if (this._pipErrorDetailsDialog) {\n                this._pipErrorDetailsDialog.show({\n                        error: this.toast.error,\n                        ok: 'Ok'\n                    },\n                    angular.noop,\n                    angular.noop\n                );\n            }\n        }\n\n        public onAction(action): void {\n            this.$mdToast.hide({\n                action: action,\n                id: this.toast.id,\n                message: this.message\n            });\n        }\n    }\n\n    class ToastService implements IToastService {\n        private SHOW_TIMEOUT: number = 20000;\n        private SHOW_TIMEOUT_NOTIFICATIONS: number = 20000;\n        private toasts: Toast[] = [];\n        private currentToast: any;\n        private sounds: any = {};\n\n        constructor(\n            $rootScope: ng.IRootScopeService,\n            private $mdToast: angular.material.IToastService\n        ) {\n            \"ngInject\";\n            $rootScope.$on('$stateChangeSuccess', () => { this.onStateChangeSuccess() });\n            $rootScope.$on('pipSessionClosed', () => { this.onClearToasts() });\n            $rootScope.$on('pipIdentityChanged', () => { this.onClearToasts() });\n        }\n\n        public showNextToast(): void {\n            let toast: Toast;\n\n            if (this.toasts.length > 0) {\n                toast = this.toasts[0];\n                this.toasts.splice(0, 1);\n                this.showToast(toast);\n            }\n        }\n\n        // Show toast\n        public showToast(toast: Toast): void {\n            this.currentToast = toast;\n\n            this.$mdToast.show({\n                    templateUrl: 'toast/Toast.html',\n                    hideDelay: toast.duration || this.SHOW_TIMEOUT,\n                    position: 'bottom left',\n                    controller: ToastController,\n                    controllerAs: 'vm',\n                    locals: {\n                        toast: this.currentToast,\n                        sounds: this.sounds\n                    }\n                })\n                .then(\n                    (action: string) => {\n                        this.showToastOkResult(action);\n                    },\n                    (action: string) => {\n                        this.showToastCancelResult(action);\n                    }\n                );\n        }\n\n        private showToastCancelResult(action: string): void {\n            if (this.currentToast && this.currentToast.cancelCallback) {\n                this.currentToast.cancelCallback(action);\n            }\n            this.currentToast = null;\n            this.showNextToast();\n        }\n\n        private showToastOkResult(action: string): void {\n            if (this.currentToast && this.currentToast.successCallback) {\n                this.currentToast.successCallback(action);\n            }\n            this.currentToast = null;\n            this.showNextToast();\n        }\n\n        public addToast(toast): void {\n            if (this.currentToast && toast.type !== 'error') {\n                this.toasts.push(toast);\n            } else {\n                this.showToast(toast);\n            }\n        }\n\n        public removeToasts(type: string): void {\n            const result: any[] = [];\n            _.each(this.toasts, (toast) => {\n                if (!toast.type || toast.type !== type) {\n                    result.push(toast);\n                }\n            });\n            this.toasts = _.cloneDeep(result);\n        }\n\n        public removeToastsById(id: string): void {\n            _.remove(this.toasts, {\n                id: id\n            });\n        }\n\n        public getToastById(id: string): Toast {\n            return _.find(this.toasts, {\n                id: id\n            });\n        }\n\n        public onStateChangeSuccess() {}\n\n        public onClearToasts(): void {\n            this.clearToasts(null);\n        }\n\n        public showNotification(message: string, actions: string[], successCallback, cancelCallback, id: string) {\n            this.addToast({\n                id: id || null,\n                type: 'notification',\n                message: message,\n                actions: actions || ['ok'],\n                successCallback: successCallback,\n                cancelCallback: cancelCallback,\n                duration: this.SHOW_TIMEOUT_NOTIFICATIONS\n            });\n        }\n\n        public showMessage(message: string, successCallback, cancelCallback, id ? : string) {\n            this.addToast({\n                id: id || null,\n                type: 'message',\n                message: message,\n                actions: ['ok'],\n                successCallback: successCallback,\n                cancelCallback: cancelCallback\n            });\n        }\n\n        public showError(message: string, successCallback, cancelCallback, id: string, error: any) {\n            this.addToast({\n                id: id || null,\n                error: error,\n                type: 'error',\n                message: message || 'Unknown error.',\n                actions: ['ok'],\n                successCallback: successCallback,\n                cancelCallback: cancelCallback\n            });\n        }\n        \n        public showClickableError(message: string, successCallback, cancelCallback, id: string, error: any) {\n            this.addToast({\n                id: id || null,\n                error: error,\n                type: 'clickable_error',\n                message: message || 'Unknown error.',\n                actions: ['ok'],\n                successCallback: successCallback,\n                cancelCallback: cancelCallback\n            });\n        }\n\n        public hideAllToasts(): void {\n            this.$mdToast.cancel();\n            this.toasts = [];\n        }\n\n        public clearToasts(type ? : string) {\n            if (type) {\n                // pipAssert.isString(type, 'pipToasts.clearToasts: type should be a string');\n                this.removeToasts(type);\n            } else {\n                this.$mdToast.cancel();\n                this.toasts = [];\n            }\n        }\n\n    }\n\n    angular\n        .module('pipToasts')\n        .service('pipToasts', ToastService);\n}","(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('color_picker/ColorPicker.html',\n    '<ul class=\"pip-color-picker {{$ctrl.class}}\" pip-selected=\"$ctrl.currentColorIndex\" pip-enter-space-press=\"$ctrl.enterSpacePress($event)\"><li tabindex=\"-1\" ng-repeat=\"color in $ctrl.colors track by color\"><md-button tabindex=\"-1\" class=\"md-icon-button pip-selectable\" ng-click=\"$ctrl.selectColor($index)\" aria-label=\"color\" ng-disabled=\"$ctrl.ngDisabled\"><md-icon ng-style=\"{\\'color\\': color}\" md-svg-icon=\"icons:{{ color == $ctrl.currentColor ? \\'circle\\' : \\'radio-off\\' }}\"></md-icon></md-button></li></ul>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('popover/Popover.html',\n    '<div class=\"pip-popover\" ng-click=\"$ctrl.params.onPopoverClick($event)\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('progress/RoutingProgress.html',\n    '<div class=\"layout-column layout-align-center-center\" ng-show=\"$ctrl.showProgress()\"><div class=\"loader\"><svg class=\"circular\" viewbox=\"25 25 50 50\"><circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle></svg></div><img src=\"\" height=\"40\" width=\"40\" class=\"pip-img\"><md-progress-circular md-diameter=\"96\" class=\"fix-ie\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('toast/Toast.html',\n    '<md-toast class=\"md-action pip-toast\" ng-class=\"{\\'pip-error\\': vm.toast.type==\\'error\\' || vm.toast.type==\\'clickable_error\\', \\'pip-column-toast\\': vm.toast.actions.length > 1 || vm.actionLenght > 4, \\'pip-no-action-toast\\': vm.actionLenght == 0}\" style=\"height:initial; max-height: initial;\"><span class=\"flex-var pip-text\" ng-bind-html=\"vm.message\" ng-class=\"{\\'clickable\\': vm.showDetails && vm.toast.type==\\'clickable_error\\' }\" ng-click=\"vm.onMessageClick()\"></span><div class=\"layout-row layout-align-end-start pip-actions\" ng-if=\"vm.actions.length > 0 || ((vm.toast.type==\\'error\\' || vm.toast.type==\\'clickable_error\\') && vm.toast.error)\"><div class=\"flex\" ng-if=\"vm.toast.actions.length > 1\"></div><md-button class=\"flex-fixed pip-toast-button\" ng-if=\"vm.toast.type==\\'error\\' && vm.toast.error && vm.showDetails\" ng-click=\"vm.onDetails()\">Details</md-button><md-button class=\"flex-fixed pip-toast-button\" ng-click=\"vm.onAction(action)\" ng-repeat=\"action in vm.actions\" aria-label=\"{{::action| translate}}\">{{::action| translate}}</md-button></div></md-toast>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-controls-html.min.js.map\n","angular.module('pipToasts', ['ngMaterial', 'pipControls.Translate'])\r\n\r\nimport './ToastService';\r\nimport './Toast';\r\n\r\nexport * from './IToastService';"]}