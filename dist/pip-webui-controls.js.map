{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/color_picker/color_picker.ts","src/controls.ts","src/dependencies/translate.ts","src/image_slider/image_slider.ts","src/image_slider/image_slider_service.ts","src/image_slider/slider_button.ts","src/image_slider/slider_indicator.ts","src/markdown/markdown.ts","src/popover/popover.ts","src/popover/popover_service.ts","src/progress/routing_progress.ts","src/toast/toasts.ts","temp/pip-webui-controls-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-controls.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export interface IColorPicker {\r\n    class: string;\r\n    colors: string[];\r\n    currentColor: string;\r\n    currentColorIndex: number;\r\n    ngDisabled: Function;\r\n    colorChange: Function;\r\n\r\n    enterSpacePress(event): void;\r\n    disabled(): boolean;\r\n    selectColor(index: number);\r\n}\r\n\r\nexport class ColorPickerController implements IColorPicker {\r\n  \r\n    private _$timeout;\r\n    private _$scope: ng.IScope;\r\n\r\n    public class: string;\r\n    public colors: string[];\r\n    public currentColor: string;\r\n    public currentColorIndex: number;\r\n    public ngDisabled: Function;\r\n    public colorChange: Function;\r\n\r\n    constructor( \r\n        $scope: ng.IScope, \r\n        $element,\r\n        $attrs, \r\n        $timeout ) {\r\n            let DEFAULT_COLORS = ['purple', 'lightgreen', 'green', 'darkred', 'pink', 'yellow', 'cyan'];\r\n            this._$timeout = $timeout;\r\n            this._$scope = $scope;\r\n\r\n            this.class = $attrs.class || '';\r\n            this.colors = !$scope['colors'] || _.isArray($scope['colors']) && $scope['colors'].length === 0 ? DEFAULT_COLORS : $scope['colors'];\r\n            this.colorChange = $scope['colorChange'] || null;\r\n            this.currentColor = $scope['currentColor'] || this.colors[0];\r\n            this.currentColorIndex = this.colors.indexOf(this.currentColor);\r\n            this.ngDisabled = $scope['ngDisabled'];\r\n\r\n    }\r\n\r\n    public disabled(): boolean {\r\n        if (this.ngDisabled) {\r\n            return this.ngDisabled();\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n     public selectColor(index: number) {\r\n        if (this.disabled()) { return; }\r\n        this.currentColorIndex = index;\r\n        this.currentColor = this.colors[this.currentColorIndex];\r\n        this._$timeout(() => {\r\n            this._$scope.$apply();\r\n        });\r\n\r\n        if (this.colorChange) {\r\n            this.colorChange();\r\n        }\r\n    };\r\n\r\n    public enterSpacePress(event): void {\r\n        this.selectColor(event.index);\r\n    };\r\n\r\n}\r\n\r\n(() => {\r\n    function pipColorPicker($parse: any) {\r\n        \"ngInject\";\r\n\r\n          return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    ngDisabled: '&',\r\n                    colors: '=pipColors',\r\n                    currentColor: '=ngModel',\r\n                    colorChange: '&ngChange'\r\n                },\r\n                templateUrl: 'color_picker/color_picker.html',\r\n                controller: ColorPickerController,\r\n                controllerAs: 'vm'\r\n            };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipColorPicker', ['pipControls.Templates'])\r\n        .directive('pipColorPicker', pipColorPicker);\r\n\r\n\r\n})();\r\n\r\n\r\n/// <reference path=\"../../typings/tsd.d.ts\" />\r\n/*\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipColorPicker', [ 'pipControls.Templates']); // 'pipFocused',\r\n\r\n    thisModule.directive('pipColorPicker',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    ngDisabled: '&',\r\n                    colors: '=pipColors',\r\n                    currentColor: '=ngModel',\r\n                    colorChange: '&ngChange'\r\n                },\r\n                templateUrl: 'color_picker/color_picker.html',\r\n                controller: 'pipColorPickerController'\r\n            };\r\n        }\r\n    );\r\n    thisModule.controller('pipColorPickerController',\r\n        function ($scope, $element, $attrs, $timeout) {\r\n            var\r\n                DEFAULT_COLORS = ['purple', 'lightgreen', 'green', 'darkred', 'pink', 'yellow', 'cyan'];\r\n\r\n            $scope.class = $attrs.class || '';\r\n\r\n            if (!$scope.colors || _.isArray($scope.colors) && $scope.colors.length === 0) {\r\n                $scope.colors = DEFAULT_COLORS;\r\n            }\r\n\r\n            $scope.currentColor = $scope.currentColor || $scope.colors[0];\r\n            $scope.currentColorIndex = $scope.colors.indexOf($scope.currentColor);\r\n\r\n            $scope.disabled = function () {\r\n                if ($scope.ngDisabled) {\r\n                    return $scope.ngDisabled();\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            $scope.selectColor = function (index) {\r\n                if ($scope.disabled()) {\r\n                    return;\r\n                }\r\n                $scope.currentColorIndex = index;\r\n\r\n                $scope.currentColor = $scope.colors[$scope.currentColorIndex];\r\n\r\n                $timeout(function () {\r\n                    $scope.$apply();\r\n                });\r\n\r\n                if ($scope.colorChange) {\r\n                    $scope.colorChange();\r\n                }\r\n            };\r\n\r\n            $scope.enterSpacePress = function (event) {\r\n                $scope.selectColor(event.index);\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n*/\r\n\r\n\r\n//import {FileUploadController} from './upload/FileUploadController';\r\n//import {FileProgressController} from './progress/FileProgressController';\r\n//import {FileUploadService} from './service/FileUploadService';","﻿/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipControls', [\r\n        'pipMarkdown',\r\n        'pipColorPicker',\r\n        'pipRoutingProgress',\r\n        'pipPopover',\r\n        'pipImageSlider',\r\n        'pipToasts',\r\n        'pipControls.Translate'\r\n    ]);\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipControls.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipImageSlider', ['pipSliderButton', 'pipSliderIndicator', 'pipImageSlider.Service']);\r\n\r\n    thisModule.directive('pipImageSlider',\r\n        function () {\r\n            return {\r\n                scope: {\r\n                    sliderIndex: '=pipImageIndex'\r\n                },\r\n                controller: function ($scope, $element, $attrs, $parse, $timeout, $interval, $pipImageSlider) {\r\n                    var blocks,\r\n                        index = 0, newIndex,\r\n                        direction,\r\n                        type = $parse($attrs.pipAnimationType)($scope),\r\n                        DEFAULT_INTERVAL = 4500,\r\n                        interval = $parse($attrs.pipAnimationInterval)($scope),\r\n                        timePromises,\r\n                        throttled;\r\n\r\n                    $element.addClass('pip-image-slider');\r\n                    $element.addClass('pip-animation-' + type);\r\n\r\n                    $scope.swipeStart = 0;\r\n                    /*\r\n                     if ($swipe)\r\n                     $swipe.bind($element, {\r\n                     'start': function(coords) {\r\n                     if (coords) $scope.swipeStart = coords.x;\r\n                     else $scope.swipeStart = 0;\r\n                     },\r\n                     'end': function(coords) {\r\n                     var delta;\r\n                     if (coords) {\r\n                     delta = $scope.swipeStart - coords.x;\r\n                     if (delta > 150)  $scope.nextBlock();\r\n                     if (delta < -150)  $scope.prevBlock();\r\n                     $scope.swipeStart = 0;\r\n                     } else $scope.swipeStart = 0;\r\n                     }\r\n                     });\r\n                     */\r\n                    setIndex();\r\n\r\n                    $timeout(function () {\r\n                        blocks = $element.find('.pip-animation-block');\r\n                        if (blocks.length > 0) {\r\n                            $(blocks[0]).addClass('pip-show');\r\n                        }\r\n                    });\r\n\r\n                    startInterval();\r\n                    throttled = _.throttle(function () {\r\n                        $pipImageSlider.toBlock(type, blocks, index, newIndex, direction);\r\n                        index = newIndex;\r\n                        setIndex();\r\n                    }, 700);\r\n\r\n                    $scope.nextBlock = function () {\r\n                        restartInterval();\r\n                        newIndex = index + 1 === blocks.length ? 0 : index + 1;\r\n                        direction = 'next';\r\n                        throttled();\r\n                    };\r\n\r\n                    $scope.prevBlock = function () {\r\n                        restartInterval();\r\n                        newIndex = index - 1 < 0 ? blocks.length - 1 : index - 1;\r\n                        direction = 'prev';\r\n                        throttled();\r\n                    };\r\n\r\n                    $scope.slideTo = function (nextIndex) {\r\n                        if (nextIndex === index || nextIndex > blocks.length - 1) {\r\n                            return;\r\n                        }\r\n\r\n                        restartInterval();\r\n                        newIndex = nextIndex;\r\n                        direction = nextIndex > index ? 'next' : 'prev';\r\n                        throttled();\r\n                    };\r\n                    \r\n                    if ($attrs.id) $pipImageSlider.registerSlider($attrs.id, $scope);\r\n\r\n                    function setIndex() {\r\n                        if ($attrs.pipImageIndex) $scope.sliderIndex = index;\r\n                    }\r\n\r\n                    function startInterval() {\r\n                        timePromises = $interval(function () {\r\n                            newIndex = index + 1 === blocks.length ? 0 : index + 1;\r\n                            direction = 'next';\r\n                            throttled();\r\n                        }, interval || DEFAULT_INTERVAL);\r\n                    }\r\n\r\n                    function stopInterval() {\r\n                        $interval.cancel(timePromises);\r\n                    }\r\n\r\n                    $element.on('$destroy', function () {\r\n                        stopInterval();\r\n                        $pipImageSlider.removeSlider($attrs.id);\r\n                    });\r\n\r\n                    function restartInterval() {\r\n                        stopInterval();\r\n                        startInterval();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipImageSlider.Service', []);\r\n\r\n    thisModule.service('$pipImageSlider',\r\n        function ($timeout) {\r\n\r\n            var ANIMATION_DURATION = 550,\r\n                sliders = {};\r\n\r\n            return {\r\n                nextCarousel: nextCarousel,\r\n                prevCarousel: prevCarousel,\r\n                toBlock: toBlock,\r\n                registerSlider: register,\r\n                removeSlider: remove,\r\n                getSliderScope: getSlider\r\n            };\r\n\r\n            function register(sliderId, sliderScope) {\r\n                sliders[sliderId] = sliderScope;\r\n            }\r\n            \r\n            function remove(sliderId) {\r\n                delete sliders[sliderId];\r\n            }\r\n\r\n            function getSlider(sliderId) {\r\n                return sliders[sliderId];\r\n            }\r\n\r\n            function nextCarousel(nextBlock, prevBlock) {\r\n                nextBlock.addClass('pip-next');\r\n                \r\n                $timeout(function () {\r\n                    nextBlock.addClass('animated').addClass('pip-show').removeClass('pip-next');\r\n                    prevBlock.addClass('animated').removeClass('pip-show');\r\n                }, 100);\r\n            }\r\n\r\n            function prevCarousel(nextBlock, prevBlock) {\r\n                $timeout(function () {\r\n                    nextBlock.addClass('animated').addClass('pip-show');\r\n                    prevBlock.addClass('animated').addClass('pip-next').removeClass('pip-show');\r\n                }, 100);\r\n            }\r\n\r\n            function toBlock(type, blocks, oldIndex, nextIndex, direction) {\r\n                var prevBlock = $(blocks[oldIndex]),\r\n                    blockIndex = nextIndex,\r\n                    nextBlock = $(blocks[blockIndex]);\r\n\r\n                if (type === 'carousel') {\r\n                    $(blocks).removeClass('pip-next').removeClass('pip-prev').removeClass('animated');\r\n\r\n                    if (direction && (direction === 'prev' || direction === 'next')) {\r\n                        if (direction === 'prev') {\r\n                            prevCarousel(nextBlock, prevBlock);\r\n                        } else {\r\n                            nextCarousel(nextBlock, prevBlock);\r\n                        }\r\n                    } else {\r\n                        if (nextIndex && nextIndex < oldIndex) {\r\n                            prevCarousel(nextBlock, prevBlock);\r\n                        } else {\r\n                            nextCarousel(nextBlock, prevBlock);\r\n                        }\r\n                    }\r\n                } else {\r\n                    prevBlock.addClass('animated').removeClass('pip-show');\r\n                    nextBlock.addClass('animated').addClass('pip-show');\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSliderButton', []);\r\n\r\n    thisModule.directive('pipSliderButton',\r\n        function () {\r\n            return {\r\n                scope: {},\r\n                controller: function ($scope, $element, $parse, $attrs, $pipImageSlider) {\r\n                    var type = $parse($attrs.pipButtonType)($scope),\r\n                        sliderId = $parse($attrs.pipSliderId)($scope);\r\n\r\n                    $element.on('click', function () {\r\n                        if (!sliderId || !type) {\r\n                            return;\r\n                        }\r\n\r\n                        $pipImageSlider.getSliderScope(sliderId)[type + 'Block']();\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSliderIndicator', []);\r\n\r\n    thisModule.directive('pipSliderIndicator',\r\n        function () {\r\n            return {\r\n                scope: false,\r\n                controller: function ($scope, $element, $parse, $attrs, $pipImageSlider) {\r\n                    var sliderId = $parse($attrs.pipSliderId)($scope),\r\n                        slideTo = $parse($attrs.pipSlideTo)($scope);\r\n\r\n                    $element.css('cursor', 'pointer');\r\n                    $element.on('click', function () {\r\n                        if (!sliderId || slideTo && slideTo < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        $pipImageSlider.getSliderScope(sliderId).slideTo(slideTo);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\ndeclare var marked: any;\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMarkdown', ['ngSanitize']);\r\n\r\n    thisModule.run(function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.setTranslations('en', {\r\n                'MARKDOWN_ATTACHMENTS': 'Attachments:',\r\n                'checklist': 'Checklist',\r\n                'documents': 'Documents',\r\n                'pictures': 'Pictures',\r\n                'location': 'Location',\r\n                'time': 'Time'\r\n            });\r\n            pipTranslate.setTranslations('ru', {\r\n                'MARKDOWN_ATTACHMENTS': 'Вложения:',\r\n                'checklist': 'Список',\r\n                'documents': 'Документы',\r\n                'pictures': 'Изображения',\r\n                'location': 'Местонахождение',\r\n                'time': 'Время'\r\n            });\r\n        }\r\n    });\r\n\r\n    thisModule.directive('pipMarkdown',\r\n        function ($parse, $injector) {\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            return {\r\n                restrict: 'EA',\r\n                scope: false,\r\n                link: function ($scope: any, $element, $attrs: any) {\r\n                    var\r\n                        textGetter = $parse($attrs.pipText),\r\n                        listGetter = $parse($attrs.pipList),\r\n                        clampGetter = $parse($attrs.pipLineCount);\r\n\r\n                    function describeAttachments(array) {\r\n                        var attachString = '',\r\n                            attachTypes = [];\r\n\r\n                        _.each(array, function (attach) {\r\n                            if (attach.type && attach.type !== 'text') {\r\n                                if (attachString.length === 0 && pipTranslate) {\r\n                                    attachString = pipTranslate.translate('MARKDOWN_ATTACHMENTS');\r\n                                }\r\n\r\n                                if (attachTypes.indexOf(attach.type) < 0) {\r\n                                    attachTypes.push(attach.type);\r\n                                    attachString += attachTypes.length > 1 ? ', ' : ' ';\r\n                                    if (pipTranslate)\r\n                                        attachString += pipTranslate.translate(attach.type);\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        return attachString;\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    function bindText(value) {\r\n                        var textString, isClamped, height, options, obj;\r\n\r\n                        if (_.isArray(value)) {\r\n                            obj = _.find(value, function (item: any) {\r\n                                return item.type === 'text' && item.text;\r\n                            });\r\n\r\n                            textString = obj ? obj.text : describeAttachments(value);\r\n                        } else {\r\n                            textString = value;\r\n                        }\r\n\r\n                        isClamped = $attrs.pipLineCount && _.isNumber(clampGetter());\r\n                        isClamped = isClamped && textString && textString.length > 0;\r\n                        options = {\r\n                            gfm: true,\r\n                            tables: true,\r\n                            breaks: true,\r\n                            sanitize: true,\r\n                            pedantic: true,\r\n                            smartLists: true,\r\n                            smartypents: false\r\n                        };\r\n                        textString = marked(textString || '', options);\r\n                        if (isClamped) {\r\n                            height = 1.5 * clampGetter();\r\n                        }\r\n                        // Assign value as HTML\r\n                        $element.html('<div' + (isClamped ? listGetter() ? 'class=\"pip-markdown-content ' +\r\n                            'pip-markdown-list\" style=\"max-height: ' + height + 'em\">'\r\n                                : ' class=\"pip-markdown-content\" style=\"max-height: ' + height + 'em\">' : listGetter()\r\n                                ? ' class=\"pip-markdown-list\">' : '>') + textString + '</div>');\r\n                        $element.find('a').attr('target', 'blank');\r\n                        if (!listGetter() && isClamped) {\r\n                            $element.append('<div class=\"pip-gradient-block\"></div>');\r\n                        }\r\n                    }\r\n\r\n                    // Fill the text\r\n                    bindText(textGetter($scope));\r\n\r\n                    // Also optimization to avoid watch if it is unnecessary\r\n                    if (toBoolean($attrs.pipRebind)) {\r\n                        $scope.$watch(textGetter, function (newValue) {\r\n                            bindText(newValue);\r\n                        });\r\n                    }\r\n\r\n                    $scope.$on('pipWindowResized', function () {\r\n                        bindText(textGetter($scope));\r\n                    });\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-markdown');\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipPopover', ['pipPopover.Service']);\r\n\r\n    thisModule.directive('pipPopover', function () {\r\n        return {\r\n            restrict: 'EA',\r\n            scope: true,\r\n            templateUrl: 'popover/popover.html',\r\n            controller: function ($scope, $rootScope, $element, $timeout, $compile) {\r\n                var backdropElement, content;\r\n\r\n                backdropElement = $('.pip-popover-backdrop');\r\n                backdropElement.on('click keydown scroll', backdropClick);\r\n                backdropElement.addClass($scope.params.responsive !== false ? 'pip-responsive' : '');\r\n\r\n                $timeout(function () {\r\n                    position();\r\n                    if ($scope.params.template) {\r\n                        content = $compile($scope.params.template)($scope);\r\n                        $element.find('.pip-popover').append(content);\r\n                    }\r\n\r\n                    init();\r\n                });\r\n\r\n                $timeout(function () {\r\n                    calcHeight();\r\n                }, 200);\r\n\r\n                $scope.onPopoverClick = onPopoverClick;\r\n                $scope = _.defaults($scope, $scope.$parent);    // eslint-disable-line \r\n\r\n                $rootScope.$on('pipPopoverResize', onResize);\r\n                $(window).resize(onResize);\r\n\r\n                function init() {\r\n                    backdropElement.addClass('opened');\r\n                    $('.pip-popover-backdrop').focus();\r\n                    if ($scope.params.timeout) {\r\n                        $timeout(function () {\r\n                            closePopover();\r\n                        }, $scope.params.timeout);\r\n                    }\r\n                }\r\n\r\n                function backdropClick() {\r\n                    if ($scope.params.cancelCallback) {\r\n                        $scope.params.cancelCallback();\r\n                    }\r\n\r\n                    closePopover();\r\n                }\r\n\r\n                function closePopover() {\r\n                    backdropElement.removeClass('opened');\r\n                    $timeout(function () {\r\n                        backdropElement.remove();\r\n                    }, 100);\r\n                }\r\n\r\n                function onPopoverClick($e) {\r\n                    $e.stopPropagation();\r\n                }\r\n\r\n                function position() {\r\n                    if ($scope.params.element) {\r\n                        var element = $($scope.params.element),\r\n                            pos = element.offset(),\r\n                            width = element.width(),\r\n                            height = element.height(),\r\n                            docWidth = $(document).width(),\r\n                            docHeight = $(document).height(),\r\n                            popover = backdropElement.find('.pip-popover');\r\n\r\n                        if (pos) {\r\n                            popover\r\n                                .css('max-width', docWidth - (docWidth - pos.left))\r\n                                .css('max-height', docHeight - (pos.top + height) - 32, 0)\r\n                                .css('left', pos.left - popover.width() + width / 2)\r\n                                .css('top', pos.top + height + 16);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function calcHeight() {\r\n                    if ($scope.params.calcHeight === false) { return; }\r\n\r\n                    var popover = backdropElement.find('.pip-popover'),\r\n                        title = popover.find('.pip-title'),\r\n                        footer = popover.find('.pip-footer'),\r\n                        content = popover.find('.pip-content'),\r\n                        contentHeight = popover.height() - title.outerHeight(true) - footer.outerHeight(true);\r\n\r\n                    content.css('max-height', Math.max(contentHeight, 0) + 'px').css('box-sizing', 'border-box');\r\n                }\r\n\r\n                function onResize() {\r\n                    backdropElement.find('.pip-popover').find('.pip-content').css('max-height', '100%');\r\n                    position();\r\n                    calcHeight();\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipPopover.Service', []);\r\n\r\n    thisModule.service('pipPopoverService',\r\n        function ($compile, $rootScope, $timeout) {\r\n            var popoverTemplate;\r\n\r\n            popoverTemplate = \"<div class='pip-popover-backdrop {{ params.class }}' ng-controller='params.controller'\" +\r\n                \" tabindex='1'> <pip-popover pip-params='params'> </pip-popover> </div>\";\r\n\r\n            return {\r\n                show: onShow,\r\n                hide: onHide,\r\n                resize: onResize\r\n            };\r\n\r\n            function onShow(p) {\r\n                var element, scope, params, content;\r\n\r\n                element = $('body');\r\n                if (element.find('md-backdrop').length > 0) { return; }\r\n                onHide();\r\n                scope = $rootScope.$new();\r\n                params = p && _.isObject(p) ? p : {};\r\n                scope.params = params;\r\n                scope.locals = params.locals;\r\n                content = $compile(popoverTemplate)(scope);\r\n                element.append(content);\r\n            }\r\n\r\n            function onHide() {\r\n                var backdropElement = $('.pip-popover-backdrop');\r\n\r\n                backdropElement.removeClass('opened');\r\n                $timeout(function () {\r\n                    backdropElement.remove();\r\n                }, 100);\r\n            }\r\n\r\n            function onResize() {\r\n                $rootScope.$broadcast('pipPopoverResize');\r\n            }\r\n\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipRoutingProgress', ['ngMaterial']);\r\n\r\n    thisModule.directive('pipRoutingProgress', function () {\r\n        return {\r\n            restrict: 'EA',\r\n            replace: true,\r\n            scope: {\r\n                    showProgress: '&',\r\n                    logoUrl: '@'\r\n                },\r\n            templateUrl: 'progress/routing_progress.html',\r\n            controller: 'pipRoutingProgressController'\r\n        };\r\n    });\r\n\r\n    thisModule.controller('pipRoutingProgressController',\r\n        function ($scope, $element, $attrs) {\r\n            var  image = $element.children('img');          \r\n\r\n            loadProgressImage();\r\n\r\n            return;\r\n\r\n            function loadProgressImage() {\r\n                if ($scope.logoUrl) {\r\n                    image.attr('src', $scope.logoUrl);\r\n                }\r\n            }\r\n\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n    var thisModule = angular.module('pipToasts', ['ngMaterial', 'pipControls.Translate']);\r\n\r\n    thisModule.controller('pipToastController',\r\n        function ($scope, $mdToast, toast, $injector) {\r\n            var pipErrorDetailsDialog = $injector.has('pipErrorDetailsDialog') \r\n                ? $injector.get('pipErrorDetailsDialog') : null;\r\n\r\n            // if (toast.type && sounds['toast_' + toast.type]) {\r\n            //     sounds['toast_' + toast.type].play();\r\n            // }\r\n\r\n            $scope.message = toast.message;\r\n            $scope.actions = toast.actions;\r\n            $scope.toast = toast;\r\n            \r\n            if (toast.actions.length === 0) {\r\n                $scope.actionLenght = 0;\r\n            } else if (toast.actions.length === 1) {\r\n                $scope.actionLenght = toast.actions[0].toString().length;\r\n            } else {\r\n                $scope.actionLenght = null;\r\n            }\r\n\r\n            $scope.showDetails = pipErrorDetailsDialog != null;\r\n            $scope.onDetails = function () {\r\n                $mdToast.hide();\r\n\r\n                if (pipErrorDetailsDialog) {\r\n                    pipErrorDetailsDialog.show(\r\n                        {\r\n                            error: $scope.toast.error,\r\n                            ok: 'Ok'\r\n                        },\r\n                        angular.noop,\r\n                        angular.noop\r\n                    );\r\n                }\r\n            };\r\n\r\n            $scope.onAction = function (action) {\r\n                $mdToast.hide(\r\n                    {\r\n                        action: action,\r\n                        id: toast.id,\r\n                        message: toast.message\r\n                    });\r\n            };\r\n        }\r\n    );\r\n\r\n    thisModule.service('pipToasts',\r\n        function ($rootScope, $mdToast) {\r\n            var\r\n                SHOW_TIMEOUT = 20000,\r\n                SHOW_TIMEOUT_NOTIFICATIONS = 20000,\r\n                toasts = [],\r\n                currentToast,\r\n                sounds = {};\r\n\r\n            /** pre-load sounds for notifications */\r\n                // sounds['toast_error'] = ngAudio.load('sounds/fatal.mp3');\r\n                // sounds['toast_notification'] = ngAudio.load('sounds/error.mp3');\r\n                // sounds['toast_message'] = ngAudio.load('sounds/warning.mp3');\r\n\r\n                // Remove error toasts when page is changed\r\n            $rootScope.$on('$stateChangeSuccess', onStateChangeSuccess);\r\n            $rootScope.$on('pipSessionClosed', onClearToasts);\r\n            $rootScope.$on('pipIdentityChanged', onClearToasts);\r\n\r\n            return {\r\n                showNotification: showNotification,\r\n                showMessage: showMessage,\r\n                showError: showError,\r\n                hideAllToasts: hideAllToasts,\r\n                clearToasts: clearToasts,\r\n                removeToastsById: removeToastsById,\r\n                getToastById: getToastById\r\n            };\r\n\r\n            // Take the next from queue and show it\r\n            function showNextToast() {\r\n                var toast;\r\n\r\n                if (toasts.length > 0) {\r\n                    toast = toasts[0];\r\n                    toasts.splice(0, 1);\r\n                    showToast(toast);\r\n                }\r\n            }\r\n\r\n            // Show toast\r\n            function showToast(toast) {\r\n                currentToast = toast;\r\n\r\n                $mdToast.show({\r\n                    templateUrl: 'toast/toast.html',\r\n                    hideDelay: toast.duration || SHOW_TIMEOUT,\r\n                    position: 'bottom left',\r\n                    controller: 'pipToastController',\r\n                    locals: {\r\n                        toast: currentToast,\r\n                        sounds: sounds\r\n                    }\r\n                })\r\n                    .then(\r\n                    function showToastOkResult(action) {\r\n                        if (currentToast.successCallback) {\r\n                            currentToast.successCallback(action);\r\n                        }\r\n                        currentToast = null;\r\n                        showNextToast();\r\n                    },\r\n                    function showToastCancelResult(action) {\r\n                        if (currentToast.cancelCallback) {\r\n                            currentToast.cancelCallback(action);\r\n                        }\r\n                        currentToast = null;\r\n                        showNextToast();\r\n                    }\r\n                );\r\n            }\r\n\r\n            function addToast(toast) {\r\n                if (currentToast && toast.type !== 'error') {\r\n                    toasts.push(toast);\r\n                } else {\r\n                    showToast(toast);\r\n                }\r\n            }\r\n\r\n            function removeToasts(type) {\r\n                var result = [];\r\n\r\n                _.each(toasts, function (toast) {\r\n                    if (!toast.type || toast.type !== type) {\r\n                        result.push(toast);\r\n                    }\r\n                });\r\n                toasts = _.cloneDeep(result);\r\n            }\r\n\r\n            function removeToastsById(id) {\r\n                _.remove(toasts, {id: id});\r\n            }\r\n\r\n            function getToastById(id) {\r\n                return _.find(toasts, {id: id});\r\n            }\r\n\r\n            function onStateChangeSuccess() {\r\n                // toasts = _.reject(toasts, function (toast) {\r\n                //     return toast.type === 'error';\r\n                // });\r\n\r\n                // if (currentToast && currentToast.type === 'error') {\r\n                //     $mdToast.cancel();\r\n                //     showNextToast();\r\n                // }\r\n            }\r\n\r\n            function onClearToasts() {\r\n                clearToasts();\r\n            }\r\n\r\n            // Show new notification toast at the top right\r\n            function showNotification(message, actions, successCallback, cancelCallback, id) {\r\n                // pipAssert.isDef(message, 'pipToasts.showNotification: message should be defined');\r\n                // pipAssert.isString(message, 'pipToasts.showNotification: message should be a string');\r\n                // pipAssert.isArray(actions || [], 'pipToasts.showNotification: actions should be an array');\r\n                // if (successCallback) {\r\n                //     pipAssert.isFunction(successCallback, 'showNotification: successCallback should be a function');\r\n                // }\r\n                // if (cancelCallback) {\r\n                //     pipAssert.isFunction(cancelCallback, 'showNotification: cancelCallback should be a function');\r\n                // }\r\n\r\n                addToast({\r\n                    id: id || null,\r\n                    type: 'notification',\r\n                    message: message,\r\n                    actions: actions || ['ok'],\r\n                    successCallback: successCallback,\r\n                    cancelCallback: cancelCallback,\r\n                    duration: SHOW_TIMEOUT_NOTIFICATIONS\r\n                });\r\n            }\r\n\r\n            // Show new message toast at the top right\r\n            function showMessage(message, successCallback, cancelCallback, id) {\r\n                // pipAssert.isDef(message, 'pipToasts.showMessage: message should be defined');\r\n                // pipAssert.isString(message, 'pipToasts.showMessage: message should be a string');\r\n                // if (successCallback) {\r\n                //     pipAssert.isFunction(successCallback, 'pipToasts.showMessage:successCallback should be a function');\r\n                // }\r\n                // if (cancelCallback) {\r\n                //     pipAssert.isFunction(cancelCallback, 'pipToasts.showMessage: cancelCallback should be a function');\r\n                // }\r\n\r\n                addToast({\r\n                    id: id || null,\r\n                    type: 'message',\r\n                    message: message,\r\n                    actions: ['ok'],\r\n                    successCallback: successCallback,\r\n                    cancelCallback: cancelCallback\r\n                });\r\n            }\r\n\r\n            // Show error toast at the bottom right after error occured\r\n            function showError(message, successCallback, cancelCallback, id, error) {\r\n                // pipAssert.isDef(message, 'pipToasts.showError: message should be defined');\r\n                // pipAssert.isString(message, 'pipToasts.showError: message should be a string');\r\n                // if (successCallback) {\r\n                //     pipAssert.isFunction(successCallback, 'pipToasts.showError: successCallback should be a function');\r\n                // }\r\n                // if (cancelCallback) {\r\n                //     pipAssert.isFunction(cancelCallback, 'pipToasts.showError: cancelCallback should be a function');\r\n                // }\r\n\r\n                addToast({\r\n                    id: id || null,\r\n                    error: error,\r\n                    type: 'error',\r\n                    message: message || 'Unknown error.',\r\n                    actions: ['ok'],\r\n                    successCallback: successCallback,\r\n                    cancelCallback: cancelCallback\r\n                });\r\n            }\r\n\r\n            // Hide and clear all toast when user signs out\r\n            function hideAllToasts() {\r\n                $mdToast.cancel();\r\n                toasts = [];\r\n            }\r\n\r\n            // Clear toasts by type\r\n            function clearToasts(type?: any) {\r\n                if (type) {\r\n                    // pipAssert.isString(type, 'pipToasts.clearToasts: type should be a string');\r\n                    removeToasts(type);\r\n                } else {\r\n                    $mdToast.cancel();\r\n                    toasts = [];\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('color_picker/color_picker.html',\n    '<ul class=\"pip-color-picker {{vm.class}}\" pip-selected=\"vm.currentColorIndex\" pip-enter-space-press=\"vm.enterSpacePress($event)\"><li tabindex=\"-1\" ng-repeat=\"color in vm.colors track by color\"><md-button tabindex=\"-1\" class=\"md-icon-button pip-selectable\" ng-click=\"vm.selectColor($index)\" aria-label=\"color\" ng-disabled=\"vm.disabled()\"><md-icon ng-style=\"{\\'color\\': color}\" md-svg-icon=\"icons:{{ color == vm.currentColor ? \\'circle\\' : \\'radio-off\\' }}\"></md-icon></md-button></li></ul>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('popover/popover.html',\n    '<div ng-if=\"params.templateUrl\" class=\"pip-popover flex layout-column\" ng-click=\"onPopoverClick($event)\" ng-include=\"params.templateUrl\"></div><div ng-if=\"params.template\" class=\"pip-popover\" ng-click=\"onPopoverClick($event)\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('progress/routing_progress.html',\n    '<div class=\"pip-routing-progress layout-column layout-align-center-center\" ng-show=\"showProgress()\"><div class=\"loader\"><svg class=\"circular\" viewbox=\"25 25 50 50\"><circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle></svg></div><img src=\"\" height=\"40\" width=\"40\" class=\"pip-img\"><md-progress-circular md-diameter=\"96\" class=\"fix-ie\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('toast/toast.html',\n    '<md-toast class=\"md-action pip-toast\" ng-class=\"{\\'pip-error\\': toast.type==\\'error\\', \\'pip-column-toast\\': toast.actions.length > 1 || actionLenght > 4, \\'pip-no-action-toast\\': actionLenght == 0}\" style=\"height:initial; max-height: initial;\"><span class=\"flex-var pip-text\" ng-bind-html=\"message\"></span><div class=\"layout-row layout-align-end-start pip-actions\" ng-if=\"actions.length > 0 || (toast.type==\\'error\\' && toast.error)\"><div class=\"flex\" ng-if=\"toast.actions.length > 1\"></div><md-button class=\"flex-fixed pip-toast-button\" ng-if=\"toast.type==\\'error\\' && toast.error && showDetails\" ng-click=\"onDetails()\">Details</md-button><md-button class=\"flex-fixed pip-toast-button\" ng-click=\"onAction(action)\" ng-repeat=\"action in actions\" aria-label=\"{{::action| translate}}\">{{::action| translate}}</md-button></div></md-toast>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-controls-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}