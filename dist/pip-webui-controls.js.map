{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/color_picker/color_picker.ts","src/controls.ts","src/dependencies/translate.ts","src/image_slider/image_slider.ts","src/image_slider/image_slider_service.ts","src/image_slider/slider_button.ts","src/image_slider/slider_indicator.ts","src/markdown/markdown.ts","src/popover/popover.ts","src/popover/popover_service.ts","src/progress/routing_progress.ts","src/toast/toasts.ts","temp/pip-webui-controls-html.js"],"names":[],"mappings":"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","file":"pip-webui-controls.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export interface IColorPicker {\r\n    class: string;\r\n    colors: string[];\r\n    currentColor: string;\r\n    currentColorIndex: number;\r\n    ngDisabled: Function;\r\n    colorChange: Function;\r\n\r\n    enterSpacePress(event): void;\r\n    disabled(): boolean;\r\n    selectColor(index: number);\r\n}\r\n\r\nexport class ColorPickerController implements IColorPicker {\r\n  \r\n    private _$timeout;\r\n    private _$scope: ng.IScope;\r\n\r\n    public class: string;\r\n    public colors: string[];\r\n    public currentColor: string;\r\n    public currentColorIndex: number;\r\n    public ngDisabled: Function;\r\n    public colorChange: Function;\r\n\r\n    constructor( \r\n        $scope: ng.IScope, \r\n        $element,\r\n        $attrs, \r\n        $timeout ) {\r\n            let DEFAULT_COLORS = ['purple', 'lightgreen', 'green', 'darkred', 'pink', 'yellow', 'cyan'];\r\n            this._$timeout = $timeout;\r\n            this._$scope = $scope;\r\n\r\n            this.class = $attrs.class || '';\r\n            this.colors = !$scope['colors'] || _.isArray($scope['colors']) && $scope['colors'].length === 0 ? DEFAULT_COLORS : $scope['colors'];\r\n            this.colorChange = $scope['colorChange'] || null;\r\n            this.currentColor = $scope['currentColor'] || this.colors[0];\r\n            this.currentColorIndex = this.colors.indexOf(this.currentColor);\r\n            this.ngDisabled = $scope['ngDisabled'];\r\n\r\n    }\r\n\r\n    public disabled(): boolean {\r\n        if (this.ngDisabled) {\r\n            return this.ngDisabled();\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n     public selectColor(index: number) {\r\n        if (this.disabled()) { return; }\r\n        this.currentColorIndex = index;\r\n        this.currentColor = this.colors[this.currentColorIndex];\r\n        this._$timeout(() => {\r\n            this._$scope.$apply();\r\n        });\r\n\r\n        if (this.colorChange) {\r\n            this.colorChange();\r\n        }\r\n    };\r\n\r\n    public enterSpacePress(event): void {\r\n        this.selectColor(event.index);\r\n    };\r\n\r\n}\r\n\r\n(() => {\r\n    function pipColorPicker($parse: any) {\r\n        \"ngInject\";\r\n\r\n          return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    ngDisabled: '&',\r\n                    colors: '=pipColors',\r\n                    currentColor: '=ngModel',\r\n                    colorChange: '&ngChange'\r\n                },\r\n                templateUrl: 'color_picker/color_picker.html',\r\n                controller: ColorPickerController,\r\n                controllerAs: 'vm'\r\n            };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipColorPicker', ['pipControls.Templates'])\r\n        .directive('pipColorPicker', pipColorPicker);\r\n\r\n\r\n})();\r\n\r\n\r\n/// <reference path=\"../../typings/tsd.d.ts\" />\r\n/*\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipColorPicker', [ 'pipControls.Templates']); // 'pipFocused',\r\n\r\n    thisModule.directive('pipColorPicker',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    ngDisabled: '&',\r\n                    colors: '=pipColors',\r\n                    currentColor: '=ngModel',\r\n                    colorChange: '&ngChange'\r\n                },\r\n                templateUrl: 'color_picker/color_picker.html',\r\n                controller: 'pipColorPickerController'\r\n            };\r\n        }\r\n    );\r\n    thisModule.controller('pipColorPickerController',\r\n        function ($scope, $element, $attrs, $timeout) {\r\n            var\r\n                DEFAULT_COLORS = ['purple', 'lightgreen', 'green', 'darkred', 'pink', 'yellow', 'cyan'];\r\n\r\n            $scope.class = $attrs.class || '';\r\n\r\n            if (!$scope.colors || _.isArray($scope.colors) && $scope.colors.length === 0) {\r\n                $scope.colors = DEFAULT_COLORS;\r\n            }\r\n\r\n            $scope.currentColor = $scope.currentColor || $scope.colors[0];\r\n            $scope.currentColorIndex = $scope.colors.indexOf($scope.currentColor);\r\n\r\n            $scope.disabled = function () {\r\n                if ($scope.ngDisabled) {\r\n                    return $scope.ngDisabled();\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            $scope.selectColor = function (index) {\r\n                if ($scope.disabled()) {\r\n                    return;\r\n                }\r\n                $scope.currentColorIndex = index;\r\n\r\n                $scope.currentColor = $scope.colors[$scope.currentColorIndex];\r\n\r\n                $timeout(function () {\r\n                    $scope.$apply();\r\n                });\r\n\r\n                if ($scope.colorChange) {\r\n                    $scope.colorChange();\r\n                }\r\n            };\r\n\r\n            $scope.enterSpacePress = function (event) {\r\n                $scope.selectColor(event.index);\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n*/\r\n\r\n\r\n//import {FileUploadController} from './upload/FileUploadController';\r\n//import {FileProgressController} from './progress/FileProgressController';\r\n//import {FileUploadService} from './service/FileUploadService';","﻿/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    angular.module('pipControls', [\r\n        'pipMarkdown',\r\n        'pipColorPicker',\r\n        'pipRoutingProgress',\r\n        'pipPopover',\r\n        'pipImageSlider',\r\n        'pipToasts',\r\n        'pipControls.Translate'\r\n    ]);\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipControls.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n/*\r\nclass pipImageSlider{\r\n\r\n    private _$attrs;\r\n    private _$interval: angular.IIntervalService;\r\n\r\n    private _blocks: any[];\r\n    private _index: number = 0;\r\n    private _newIndex: number;\r\n    private _direction: string;\r\n    private _type: any;\r\n    private DEFAULT_INTERVAL = 4500;\r\n    private _interval;\r\n    private _timePromises;\r\n    private _throttled: Function;\r\n\r\n    public swipeStart: number = 0;\r\n    public sliderIndex: number;\r\n\r\n    constructor(\r\n        $scope: ng.IScope, \r\n        $element, \r\n        $attrs, \r\n        $parse, \r\n        $timeout: angular.ITimeoutService,\r\n        $interval: angular.IIntervalService, \r\n        $pipImageSlider) {\r\n\r\n        this.sliderIndex = $scope['sliderIndex'];\r\n        this._type = $parse($attrs.pipAnimationType)($scope),\r\n        this._interval = $parse($attrs.pipAnimationInterval)($scope);\r\n        this._$attrs = $attrs;\r\n        this._$interval = $interval;\r\n\r\n        $element.addClass('pip-image-slider');\r\n        $element.addClass('pip-animation-' + this._type);\r\n        \r\n        this.setIndex();\r\n\r\n        $timeout(() => {\r\n            this._blocks = $element.find('.pip-animation-block');\r\n            if (this._blocks.length > 0) {\r\n                $(this._blocks[0]).addClass('pip-show');\r\n            }\r\n        });\r\n\r\n        this.startInterval();\r\n        this._throttled = _.throttle(() => {\r\n            $pipImageSlider.toBlock(this._type, this._blocks, this._index, this._newIndex, this._direction);\r\n            this._index = this._newIndex;\r\n            this.setIndex();\r\n        }, 700);\r\n        \r\n        if ($attrs.id) { $pipImageSlider.registerSlider($attrs.id, $scope) }\r\n\r\n        $element.on('$destroy', () => {\r\n            this.stopInterval();\r\n            $pipImageSlider.removeSlider($attrs.id);\r\n        });\r\n\r\n    }\r\n\r\n    public nextBlock() {\r\n        this.restartInterval();\r\n        this._newIndex = this._index + 1 === this._blocks.length ? 0 : this._index + 1;\r\n        this._direction = 'next';\r\n        this._throttled();\r\n    }\r\n\r\n    public prevBlock() {\r\n        this.restartInterval();\r\n        this._newIndex = this._index - 1 < 0 ? this._blocks.length - 1 : this._index - 1;\r\n        this._direction = 'prev';\r\n        this._throttled();\r\n    }\r\n\r\n    public slideTo(nextIndex: number) {\r\n        if (nextIndex === this._index || nextIndex > this._blocks.length - 1) {\r\n            return;\r\n        }\r\n\r\n        this.restartInterval();\r\n        this._newIndex = nextIndex;\r\n        this._direction = nextIndex > this._index ? 'next' : 'prev';\r\n        this._throttled();\r\n    }\r\n\r\n    private setIndex() {\r\n        if (this._$attrs.pipImageIndex) this.sliderIndex = this._index;\r\n    }\r\n\r\n    private startInterval() {\r\n        this._timePromises = this._$interval(() => {\r\n            this._newIndex = this._index + 1 === this._blocks.length ? 0 : this._index + 1;\r\n            this._direction = 'next';\r\n            this._throttled();\r\n        }, this._interval || this.DEFAULT_INTERVAL);\r\n    }\r\n\r\n    private stopInterval() {\r\n        this._$interval.cancel(this._timePromises);\r\n    }\r\n\r\n    private restartInterval() {\r\n        this.stopInterval();\r\n        this.startInterval();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n(() => {\r\n\r\n    function pipImageSlider() {\r\n        return {\r\n            restrict: 'EA',\r\n            replace: true,\r\n            scope: {\r\n                sliderIndex: '=pipImageIndex'\r\n            },\r\n            controller: pipImageSlider,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipImageSlider', ['pipSliderButton', 'pipSliderIndicator', 'pipImageSlider.Service'])\r\n        .directive('pipImageSlider', pipImageSlider);\r\n\r\n})();*/\r\n\r\n\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipImageSlider', ['pipSliderButton', 'pipSliderIndicator', 'pipImageSlider.Service']);\r\n\r\n    thisModule.directive('pipImageSlider',\r\n        function () {\r\n            return {\r\n                scope: {\r\n                    sliderIndex: '=pipImageIndex'\r\n                },\r\n                controller: function ($scope, $element, $attrs, $parse, $timeout, $interval, $pipImageSlider) {\r\n                    var blocks,\r\n                        index = 0, newIndex,\r\n                        direction,\r\n                        type = $parse($attrs.pipAnimationType)($scope),\r\n                        DEFAULT_INTERVAL = 4500,\r\n                        interval = $parse($attrs.pipAnimationInterval)($scope),\r\n                        timePromises,\r\n                        throttled;\r\n\r\n                    $element.addClass('pip-image-slider');\r\n                    $element.addClass('pip-animation-' + type);\r\n\r\n                    $scope.swipeStart = 0;\r\n                    /*\r\n                     if ($swipe)\r\n                     $swipe.bind($element, {\r\n                     'start': function(coords) {\r\n                     if (coords) $scope.swipeStart = coords.x;\r\n                     else $scope.swipeStart = 0;\r\n                     },\r\n                     'end': function(coords) {\r\n                     var delta;\r\n                     if (coords) {\r\n                     delta = $scope.swipeStart - coords.x;\r\n                     if (delta > 150)  $scope.nextBlock();\r\n                     if (delta < -150)  $scope.prevBlock();\r\n                     $scope.swipeStart = 0;\r\n                     } else $scope.swipeStart = 0;\r\n                     }\r\n                     });*/\r\n                     \r\n                    setIndex();\r\n\r\n                    $timeout(function () {\r\n                        blocks = $element.find('.pip-animation-block');\r\n                        if (blocks.length > 0) {\r\n                            $(blocks[0]).addClass('pip-show');\r\n                        }\r\n                    });\r\n\r\n                    startInterval();\r\n                    throttled = _.throttle(function () {\r\n                        $pipImageSlider.toBlock(type, blocks, index, newIndex, direction);\r\n                        index = newIndex;\r\n                        setIndex();\r\n                    }, 700);\r\n\r\n                    $scope.nextBlock = function () {\r\n                        restartInterval();\r\n                        newIndex = index + 1 === blocks.length ? 0 : index + 1;\r\n                        direction = 'next';\r\n                        throttled();\r\n                    };\r\n\r\n                    $scope.prevBlock = function () {\r\n                        restartInterval();\r\n                        newIndex = index - 1 < 0 ? blocks.length - 1 : index - 1;\r\n                        direction = 'prev';\r\n                        throttled();\r\n                    };\r\n\r\n                    $scope.slideTo = function (nextIndex) {\r\n                        if (nextIndex === index || nextIndex > blocks.length - 1) {\r\n                            return;\r\n                        }\r\n\r\n                        restartInterval();\r\n                        newIndex = nextIndex;\r\n                        direction = nextIndex > index ? 'next' : 'prev';\r\n                        throttled();\r\n                    };\r\n                    \r\n                    if ($attrs.id) $pipImageSlider.registerSlider($attrs.id, $scope);\r\n\r\n                    function setIndex() {\r\n                        if ($attrs.pipImageIndex) $scope.sliderIndex = index;\r\n                    }\r\n\r\n                    function startInterval() {\r\n                        timePromises = $interval(function () {\r\n                            newIndex = index + 1 === blocks.length ? 0 : index + 1;\r\n                            direction = 'next';\r\n                            throttled();\r\n                        }, interval || DEFAULT_INTERVAL);\r\n                    }\r\n\r\n                    function stopInterval() {\r\n                        $interval.cancel(timePromises);\r\n                    }\r\n\r\n                    $element.on('$destroy', function () {\r\n                        stopInterval();\r\n                        $pipImageSlider.removeSlider($attrs.id);\r\n                    });\r\n\r\n                    function restartInterval() {\r\n                        stopInterval();\r\n                        startInterval();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\ninterface IImageSliderService {\r\n    registerSlider(sliderId: string, sliderScope): void;\r\n    removeSlider(sliderId: string): void;\r\n    getSliderScope(sliderId: string);\r\n    nextCarousel(nextBlock, prevBlock): void;\r\n    prevCarousel(nextBlock, prevBlock): void;\r\n    toBlock(type: string, blocks: any[], oldIndex: number, nextIndex: number, direction: string): void;\r\n}\r\n\r\nclass ImageSliderService {\r\n    private _$timeout: angular.ITimeoutService;\r\n    private ANIMATION_DURATION: number = 550;\r\n    private _sliders = {};\r\n\r\n    constructor($timeout: angular.ITimeoutService) {\r\n        this._$timeout = $timeout;\r\n    }\r\n\r\n    public registerSlider(sliderId: string, sliderScope): void {\r\n        this._sliders[sliderId] = sliderScope;\r\n    }\r\n            \r\n    public removeSlider(sliderId: string): void {\r\n        delete this._sliders[sliderId];\r\n    }\r\n\r\n    public getSliderScope(sliderId: string) {\r\n        return this._sliders[sliderId];\r\n    }\r\n\r\n    public nextCarousel(nextBlock, prevBlock): void {\r\n        nextBlock.addClass('pip-next');\r\n                \r\n        this._$timeout(() => {\r\n            nextBlock.addClass('animated').addClass('pip-show').removeClass('pip-next');\r\n            prevBlock.addClass('animated').removeClass('pip-show');\r\n        }, 100);\r\n    }\r\n\r\n    public prevCarousel(nextBlock, prevBlock): void {\r\n        this._$timeout(() => {\r\n            nextBlock.addClass('animated').addClass('pip-show');\r\n            prevBlock.addClass('animated').addClass('pip-next').removeClass('pip-show');\r\n        }, 100);\r\n    }\r\n\r\n    public toBlock(type: string, blocks: any[], oldIndex: number, nextIndex: number, direction: string): void {\r\n        let prevBlock = $(blocks[oldIndex]),\r\n            blockIndex: number = nextIndex,\r\n            nextBlock = $(blocks[blockIndex]);\r\n\r\n        if (type === 'carousel') {\r\n            $(blocks).removeClass('pip-next').removeClass('pip-prev').removeClass('animated');\r\n\r\n            if (direction && (direction === 'prev' || direction === 'next')) {\r\n                if (direction === 'prev') {\r\n                    this.prevCarousel(nextBlock, prevBlock);\r\n                } else {\r\n                    this.nextCarousel(nextBlock, prevBlock);\r\n                }\r\n            } else {\r\n                if (nextIndex && nextIndex < oldIndex) {\r\n                    this.prevCarousel(nextBlock, prevBlock);\r\n                } else {\r\n                    this.nextCarousel(nextBlock, prevBlock);\r\n                }\r\n            }\r\n        } else {\r\n            prevBlock.addClass('animated').removeClass('pip-show');\r\n            nextBlock.addClass('animated').addClass('pip-show');\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n(() => {\r\n    'use strict';\r\n    angular\r\n        .module('pipImageSlider.Service', [])\r\n        .service('$pipImageSlider', ImageSliderService);\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSliderButton', []);\r\n\r\n    thisModule.directive('pipSliderButton',\r\n        function () {\r\n            return {\r\n                scope: {},\r\n                controller: function ($scope, $element, $parse, $attrs, $pipImageSlider) {\r\n                    var type = $parse($attrs.pipButtonType)($scope),\r\n                        sliderId = $parse($attrs.pipSliderId)($scope);\r\n\r\n                    $element.on('click', function () {\r\n                        if (!sliderId || !type) {\r\n                            return;\r\n                        }\r\n\r\n                        $pipImageSlider.getSliderScope(sliderId)[type + 'Block']();\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSliderIndicator', []);\r\n\r\n    thisModule.directive('pipSliderIndicator',\r\n        function () {\r\n            return {\r\n                scope: false,\r\n                controller: function ($scope, $element, $parse, $attrs, $pipImageSlider) {\r\n                    var sliderId = $parse($attrs.pipSliderId)($scope),\r\n                        slideTo = $parse($attrs.pipSlideTo)($scope);\r\n\r\n                    $element.css('cursor', 'pointer');\r\n                    $element.on('click', function () {\r\n                        if (!sliderId || slideTo && slideTo < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        $pipImageSlider.getSliderScope(sliderId).slideTo(slideTo);\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\ndeclare var marked: any;\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipMarkdown', ['ngSanitize']);\r\n\r\n    thisModule.run(function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.setTranslations('en', {\r\n                'MARKDOWN_ATTACHMENTS': 'Attachments:',\r\n                'checklist': 'Checklist',\r\n                'documents': 'Documents',\r\n                'pictures': 'Pictures',\r\n                'location': 'Location',\r\n                'time': 'Time'\r\n            });\r\n            pipTranslate.setTranslations('ru', {\r\n                'MARKDOWN_ATTACHMENTS': 'Вложения:',\r\n                'checklist': 'Список',\r\n                'documents': 'Документы',\r\n                'pictures': 'Изображения',\r\n                'location': 'Местонахождение',\r\n                'time': 'Время'\r\n            });\r\n        }\r\n    });\r\n\r\n    thisModule.directive('pipMarkdown',\r\n        function ($parse, $injector) {\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            return {\r\n                restrict: 'EA',\r\n                scope: false,\r\n                link: function ($scope: any, $element, $attrs: any) {\r\n                    var\r\n                        textGetter = $parse($attrs.pipText),\r\n                        listGetter = $parse($attrs.pipList),\r\n                        clampGetter = $parse($attrs.pipLineCount);\r\n\r\n                    function describeAttachments(array) {\r\n                        var attachString = '',\r\n                            attachTypes = [];\r\n\r\n                        _.each(array, function (attach) {\r\n                            if (attach.type && attach.type !== 'text') {\r\n                                if (attachString.length === 0 && pipTranslate) {\r\n                                    attachString = pipTranslate.translate('MARKDOWN_ATTACHMENTS');\r\n                                }\r\n\r\n                                if (attachTypes.indexOf(attach.type) < 0) {\r\n                                    attachTypes.push(attach.type);\r\n                                    attachString += attachTypes.length > 1 ? ', ' : ' ';\r\n                                    if (pipTranslate)\r\n                                        attachString += pipTranslate.translate(attach.type);\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        return attachString;\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    function bindText(value) {\r\n                        var textString, isClamped, height, options, obj;\r\n\r\n                        if (_.isArray(value)) {\r\n                            obj = _.find(value, function (item: any) {\r\n                                return item.type === 'text' && item.text;\r\n                            });\r\n\r\n                            textString = obj ? obj.text : describeAttachments(value);\r\n                        } else {\r\n                            textString = value;\r\n                        }\r\n\r\n                        isClamped = $attrs.pipLineCount && _.isNumber(clampGetter());\r\n                        isClamped = isClamped && textString && textString.length > 0;\r\n                        options = {\r\n                            gfm: true,\r\n                            tables: true,\r\n                            breaks: true,\r\n                            sanitize: true,\r\n                            pedantic: true,\r\n                            smartLists: true,\r\n                            smartypents: false\r\n                        };\r\n                        textString = marked(textString || '', options);\r\n                        if (isClamped) {\r\n                            height = 1.5 * clampGetter();\r\n                        }\r\n                        // Assign value as HTML\r\n                        $element.html('<div' + (isClamped ? listGetter() ? 'class=\"pip-markdown-content ' +\r\n                            'pip-markdown-list\" style=\"max-height: ' + height + 'em\">'\r\n                                : ' class=\"pip-markdown-content\" style=\"max-height: ' + height + 'em\">' : listGetter()\r\n                                ? ' class=\"pip-markdown-list\">' : '>') + textString + '</div>');\r\n                        $element.find('a').attr('target', 'blank');\r\n                        if (!listGetter() && isClamped) {\r\n                            $element.append('<div class=\"pip-gradient-block\"></div>');\r\n                        }\r\n                    }\r\n\r\n                    // Fill the text\r\n                    bindText(textGetter($scope));\r\n\r\n                    // Also optimization to avoid watch if it is unnecessary\r\n                    if (toBoolean($attrs.pipRebind)) {\r\n                        $scope.$watch(textGetter, function (newValue) {\r\n                            bindText(newValue);\r\n                        });\r\n                    }\r\n\r\n                    $scope.$on('pipWindowResized', function () {\r\n                        bindText(textGetter($scope));\r\n                    });\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-markdown');\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n\r\nexport class PopoverController {\r\n  \r\n    private _$timeout;\r\n    private _$scope: ng.IScope;\r\n\r\n    public timeout;\r\n    public backdropElement;\r\n    public content;\r\n    public element;\r\n    public calcH: boolean;\r\n\r\n    public templateUrl;\r\n    public template\r\n\r\n    public cancelCallback: Function;\r\n\r\n    constructor( \r\n        $scope: ng.IScope,\r\n        $rootScope,\r\n        $element,\r\n        $timeout, \r\n        $compile\r\n       ) {\r\n           //$scope = _.defaults($scope, $scope.$parent);    // eslint-disable-line \r\n           this._$timeout = $timeout;\r\n           this.templateUrl = $scope['params'].templateUrl;\r\n           this.template = $scope['params'].template;\r\n           this.timeout = $scope['params'].timeout;\r\n           this.element = $scope['params'].element;\r\n           this.calcH = $scope['params'].calcHeight;\r\n           this.cancelCallback = $scope['params'].cancelCallback;\r\n           this.backdropElement = $('.pip-popover-backdrop');\r\n           this.backdropElement.on('click keydown scroll',() =>{ this.backdropClick()});\r\n           this.backdropElement.addClass($scope['params'].responsive !== false ? 'pip-responsive' : '');\r\n\r\n           $timeout(() => {\r\n                this.position();\r\n                if ($scope['params'].template) {\r\n                    this.content = $compile($scope['params'].template)($scope);\r\n                    $element.find('.pip-popover').append(this.content);\r\n                }\r\n\r\n                this.init();\r\n           });\r\n\r\n           $timeout(() => { this.calcHeight(); }, 200);\r\n           $rootScope.$on('pipPopoverResize', () => { this.onResize()});\r\n           $(window).resize(() => { this.onResize() });\r\n\r\n    }\r\n\r\n    public backdropClick() {\r\n        if (this.cancelCallback) {\r\n            this.cancelCallback();\r\n        }\r\n        this.closePopover();\r\n    }\r\n\r\n    public closePopover() {\r\n        this.backdropElement.removeClass('opened');\r\n        this._$timeout(() => {\r\n            this.backdropElement.remove();\r\n        }, 100);\r\n    }\r\n\r\n    public onPopoverClick($e) {\r\n        $e.stopPropagation();\r\n    }\r\n\r\n\r\n    private init() {\r\n        this.backdropElement.addClass('opened');\r\n        $('.pip-popover-backdrop').focus();\r\n        if (this.timeout) {\r\n            this._$timeout(function () {\r\n                this.closePopover();\r\n            }, this.timeout);\r\n        }\r\n    }\r\n\r\n    private position() {\r\n        if (this.element) {\r\n            let element = $(this.element),\r\n                pos = element.offset(),\r\n                width = element.width(),\r\n                height = element.height(),\r\n                docWidth = $(document).width(),\r\n                docHeight = $(document).height(),\r\n                popover = this.backdropElement.find('.pip-popover');\r\n\r\n            if (pos) {\r\n                popover\r\n                    .css('max-width', docWidth - (docWidth - pos.left))\r\n                    .css('max-height', docHeight - (pos.top + height) - 32, 0)\r\n                    .css('left', pos.left - popover.width() + width / 2)\r\n                    .css('top', pos.top + height + 16);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onResize() {\r\n        this.backdropElement.find('.pip-popover').find('.pip-content').css('max-height', '100%');\r\n        this.position();\r\n        this.calcHeight();\r\n    }\r\n\r\n    private calcHeight() {\r\n        if (this.calcH === false) { return; }\r\n        let popover = this.backdropElement.find('.pip-popover'),\r\n        title = popover.find('.pip-title'),\r\n        footer = popover.find('.pip-footer'),\r\n        content = popover.find('.pip-content'),\r\n        contentHeight = popover.height() - title.outerHeight(true) - footer.outerHeight(true);\r\n        content.css('max-height', Math.max(contentHeight, 0) + 'px').css('box-sizing', 'border-box');\r\n    }\r\n}\r\n\r\n(() => {\r\n    function pipPopover($parse: any) {\r\n        \"ngInject\";\r\n\r\n          return {\r\n                restrict: 'EA',\r\n                scope: true,\r\n                templateUrl: 'popover/popover.html',\r\n                controller: PopoverController,\r\n                controllerAs: 'vm'\r\n            };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipPopover', ['pipPopover.Service'])\r\n        .directive('pipPopover', pipPopover);\r\n\r\n\r\n})();\r\n\r\n\r\n\r\n/*\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipPopover', ['pipPopover.Service']);\r\n\r\n    thisModule.directive('pipPopover', function () {\r\n        return {\r\n            restrict: 'EA',\r\n            scope: true,\r\n            templateUrl: 'popover/popover.html',\r\n            controller: function ($scope, $rootScope, $element, $timeout, $compile) {\r\n                var backdropElement, content;\r\n\r\n                backdropElement = $('.pip-popover-backdrop');\r\n                backdropElement.on('click keydown scroll', backdropClick);\r\n                backdropElement.addClass($scope.params.responsive !== false ? 'pip-responsive' : '');\r\n\r\n                $timeout(function () {\r\n                    position();\r\n                    if ($scope.params.template) {\r\n                        content = $compile($scope.params.template)($scope);\r\n                        $element.find('.pip-popover').append(content);\r\n                    }\r\n\r\n                    init();\r\n                });\r\n\r\n                $timeout(function () {\r\n                    calcHeight();\r\n                }, 200);\r\n\r\n                $scope.onPopoverClick = onPopoverClick;\r\n                $scope = _.defaults($scope, $scope.$parent);    // eslint-disable-line \r\n\r\n                $rootScope.$on('pipPopoverResize', onResize);\r\n                $(window).resize(onResize);\r\n\r\n                function init() {\r\n                    backdropElement.addClass('opened');\r\n                    $('.pip-popover-backdrop').focus();\r\n                    if ($scope.params.timeout) {\r\n                        $timeout(function () {\r\n                            closePopover();\r\n                        }, $scope.params.timeout);\r\n                    }\r\n                }\r\n\r\n                function backdropClick() {\r\n                    if ($scope.params.cancelCallback) {\r\n                        $scope.params.cancelCallback();\r\n                    }\r\n\r\n                    closePopover();\r\n                }\r\n\r\n                function closePopover() {\r\n                    backdropElement.removeClass('opened');\r\n                    $timeout(function () {\r\n                        backdropElement.remove();\r\n                    }, 100);\r\n                }\r\n\r\n                function onPopoverClick($e) {\r\n                    $e.stopPropagation();\r\n                }\r\n\r\n                function position() {\r\n                    if ($scope.params.element) {\r\n                        var element = $($scope.params.element),\r\n                            pos = element.offset(),\r\n                            width = element.width(),\r\n                            height = element.height(),\r\n                            docWidth = $(document).width(),\r\n                            docHeight = $(document).height(),\r\n                            popover = backdropElement.find('.pip-popover');\r\n\r\n                        if (pos) {\r\n                            popover\r\n                                .css('max-width', docWidth - (docWidth - pos.left))\r\n                                .css('max-height', docHeight - (pos.top + height) - 32, 0)\r\n                                .css('left', pos.left - popover.width() + width / 2)\r\n                                .css('top', pos.top + height + 16);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function calcHeight() {\r\n                    if ($scope.params.calcHeight === false) { return; }\r\n\r\n                    var popover = backdropElement.find('.pip-popover'),\r\n                        title = popover.find('.pip-title'),\r\n                        footer = popover.find('.pip-footer'),\r\n                        content = popover.find('.pip-content'),\r\n                        contentHeight = popover.height() - title.outerHeight(true) - footer.outerHeight(true);\r\n\r\n                    content.css('max-height', Math.max(contentHeight, 0) + 'px').css('box-sizing', 'border-box');\r\n                }\r\n\r\n                function onResize() {\r\n                    backdropElement.find('.pip-popover').find('.pip-content').css('max-height', '100%');\r\n                    position();\r\n                    calcHeight();\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\n})();*/\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nexport class PopoverService {\r\n  \r\n    private _$timeout;\r\n    private _$scope: ng.IScope;\r\n    private _$compile;\r\n    private _$rootScope: ng.IRootScopeService;\r\n\r\n    public popoverTemplate: string;\r\n\r\n    constructor( \r\n        $compile,\r\n        $rootScope, \r\n        $timeout\r\n       ) {\r\n           this._$compile = $compile;\r\n           this._$rootScope = $rootScope;\r\n           this._$timeout = $timeout;\r\n           this.popoverTemplate = \"<div class='pip-popover-backdrop {{ params.class }}' ng-controller='params.controller'\" +\r\n                \" tabindex='1'> <pip-popover pip-params='params'> </pip-popover> </div>\";\r\n    }\r\n\r\n    public show(p) {\r\n        let element, scope: ng.IScope, params, content;\r\n            \r\n        element = $('body');\r\n        if (element.find('md-backdrop').length > 0) { return; }\r\n        this.hide();\r\n        scope = this._$rootScope.$new();\r\n        params = p && _.isObject(p) ? p : {};\r\n        scope['params'] = params;\r\n        scope['locals'] = params.locals;\r\n        content = this._$compile(this.popoverTemplate)(scope);\r\n        element.append(content);\r\n    }\r\n\r\n    public hide() {\r\n        let backdropElement = $('.pip-popover-backdrop');\r\n        backdropElement.removeClass('opened');\r\n        this._$timeout(() => {\r\n            backdropElement.remove();\r\n        }, 100);\r\n    }\r\n\r\n    public resize() {\r\n        this._$rootScope.$broadcast('pipPopoverResize');\r\n    }\r\n}\r\n\r\n\r\n(() => {\r\n    angular\r\n        .module('pipPopover.Service', [])\r\n        .service('pipPopoverService', PopoverService);\r\n})();","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nclass RoutingController {\r\n    private _image: any;\r\n\r\n    public logoUrl: string;\r\n    public showProgress: Function;\r\n\r\n    constructor( \r\n        $scope: ng.IScope,\r\n        $element)\r\n    {\r\n\r\n        this._image = $element.children('img'); \r\n        this.showProgress = $scope['showProgress']\r\n        this.logoUrl = $scope['logoUrl'];        \r\n        this.loadProgressImage();\r\n\r\n    }\r\n\r\n    public loadProgressImage() {\r\n        if (this.logoUrl) {\r\n            this._image.attr('src', this.logoUrl);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n(() => {\r\n\r\n    function RoutingProgress() {\r\n        return {\r\n            restrict: 'EA',\r\n            replace: true,\r\n            scope: {\r\n                    showProgress: '&',\r\n                    logoUrl: '@'\r\n                },\r\n            templateUrl: 'progress/routing_progress.html',\r\n            controller: RoutingController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipRoutingProgress', ['ngMaterial'])\r\n        .directive('pipRoutingProgress', RoutingProgress);\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\ninterface IPipToast {\r\n    type: string;\r\n    id: string;\r\n    error: any;\r\n    message: string;\r\n    actions: string[];\r\n    duration: number;\r\n    successCallback: Function;\r\n    cancelCallback: Function\r\n}\r\n\r\nclass ToastController {\r\n    private _$mdToast: angular.material.IToastService;\r\n    private _pipErrorDetailsDialog;\r\n\r\n    public message: string;\r\n    public actions: string[];\r\n    public toast: IPipToast;\r\n    public actionLenght: number;\r\n    public showDetails: boolean;\r\n\r\n    constructor( \r\n        $mdToast: angular.material.IToastService, \r\n        toast: IPipToast, \r\n        $injector\r\n       ) {\r\n            this._pipErrorDetailsDialog = $injector.has('pipErrorDetailsDialog') \r\n                ? $injector.get('pipErrorDetailsDialog') : null;\r\n            this._$mdToast = $mdToast;\r\n            this.message = toast.message;\r\n            this.actions = toast.actions;\r\n            this.toast = toast;\r\n            \r\n            if (toast.actions.length === 0) {\r\n                this.actionLenght = 0;\r\n            } else {\r\n                this.actionLenght = toast.actions.length === 1 ? toast.actions[0].toString().length : null;\r\n            }\r\n\r\n            this.showDetails = this._pipErrorDetailsDialog != null;\r\n\r\n    }\r\n\r\n     public onDetails(): void {\r\n        this._$mdToast.hide();\r\n        if (this._pipErrorDetailsDialog) {\r\n            this._pipErrorDetailsDialog.show(\r\n            {\r\n                error: this.toast.error,\r\n                ok: 'Ok'\r\n            },\r\n            angular.noop,\r\n            angular.noop\r\n            );\r\n        }\r\n    }\r\n\r\n    public onAction(action): void {\r\n        this._$mdToast.hide(\r\n        {\r\n            action: action,\r\n            id: this.toast.id,\r\n            message: this.message\r\n        });\r\n\r\n    }\r\n}\r\n\r\ninterface IToastService {\r\n    showNextToast(): void;\r\n    showToast(toast: IPipToast): void;\r\n    addToast(toast): void;\r\n    removeToasts(type: string): void;\r\n    getToastById(id: string): IPipToast;\r\n    removeToastsById(id: string): void;\r\n    onClearToasts(): void;\r\n    showNotification(message: string, actions: string[], successCallback, cancelCallback, id: string);\r\n    showMessage(message: string, successCallback, cancelCallback, id?: string);\r\n    showError(message: string, successCallback, cancelCallback, id: string, error: any);\r\n    hideAllToasts(): void;\r\n    clearToasts(type?: string);\r\n}\r\n\r\nclass ToastService implements IToastService {\r\n    private SHOW_TIMEOUT: number = 20000;\r\n    private SHOW_TIMEOUT_NOTIFICATIONS: number = 20000;\r\n    private toasts: IPipToast[] = [];\r\n    private currentToast: any;\r\n    private sounds: any = {};\r\n\r\n    private _$mdToast: angular.material.IToastService;\r\n\r\n    constructor(\r\n        $rootScope: ng.IRootScopeService, \r\n        $mdToast: angular.material.IToastService) {\r\n\r\n        this._$mdToast = $mdToast;\r\n\r\n        $rootScope.$on('$stateChangeSuccess', this.onStateChangeSuccess);\r\n        $rootScope.$on('pipSessionClosed', this.onClearToasts);\r\n        $rootScope.$on('pipIdentityChanged', this.onClearToasts);\r\n    }\r\n\r\n    public showNextToast(): void {\r\n        let toast: IPipToast;\r\n\r\n        if (this.toasts.length > 0) {\r\n            toast = this.toasts[0];\r\n            this.toasts.splice(0, 1);\r\n            this.showToast(toast);\r\n        }\r\n    }\r\n\r\n     // Show toast\r\n     public showToast(toast: IPipToast): void {\r\n        this.currentToast = toast;\r\n\r\n        this._$mdToast.show({\r\n            templateUrl: 'toast/toast.html',\r\n            hideDelay: toast.duration || this.SHOW_TIMEOUT,\r\n            position: 'bottom left',\r\n            controller: ToastController,\r\n            controllerAs: 'vm',\r\n            locals: {\r\n                toast: this.currentToast,\r\n                sounds: this.sounds\r\n            }\r\n        })\r\n        .then( \r\n            (action: string) => {\r\n                this.showToastOkResult(action);\r\n            },\r\n            (action: string) => {\r\n                this.showToastCancelResult(action);\r\n            }\r\n        );\r\n    }\r\n\r\n    private showToastCancelResult(action: string):void {\r\n        if (this.currentToast.cancelCallback) {\r\n            this.currentToast.cancelCallback(action);\r\n        }\r\n        this.currentToast = null;\r\n        this.showNextToast();\r\n    }\r\n\r\n    private showToastOkResult(action: string): void {\r\n        if (this.currentToast.successCallback) {\r\n            this.currentToast.successCallback(action);\r\n        }\r\n        this.currentToast = null;\r\n        this.showNextToast();\r\n    }\r\n\r\n    public addToast(toast): void {\r\n        if (this.currentToast && toast.type !== 'error') {\r\n            this.toasts.push(toast);\r\n        } else {\r\n            this.showToast(toast);\r\n        }\r\n    }\r\n\r\n    public removeToasts(type: string): void {\r\n        let result: any[] = [];\r\n        _.each(this.toasts, (toast) => {\r\n            if (!toast.type || toast.type !== type) {\r\n                result.push(toast);\r\n            }\r\n        });\r\n        this.toasts = _.cloneDeep(result);\r\n    }\r\n\r\n    public removeToastsById(id: string): void {\r\n        _.remove(this.toasts, {id: id});\r\n    }\r\n\r\n    public getToastById(id: string): IPipToast {\r\n        return _.find(this.toasts, {id: id});\r\n    }\r\n\r\n    public onStateChangeSuccess() {}\r\n\r\n    public onClearToasts(): void {\r\n        this.clearToasts();\r\n    }\r\n\r\n    public showNotification(message: string, actions: string[], successCallback, cancelCallback, id: string) {\r\n        this.addToast({\r\n            id: id || null,\r\n            type: 'notification',\r\n            message: message,\r\n            actions: actions || ['ok'],\r\n            successCallback: successCallback,\r\n            cancelCallback: cancelCallback,\r\n            duration: this.SHOW_TIMEOUT_NOTIFICATIONS\r\n        });\r\n    }\r\n\r\n    public showMessage(message: string, successCallback, cancelCallback, id?: string) {\r\n        this.addToast({\r\n            id: id || null,\r\n            type: 'message',\r\n            message: message,\r\n            actions: ['ok'],\r\n            successCallback: successCallback,\r\n            cancelCallback: cancelCallback\r\n        });\r\n    }\r\n\r\n     public showError(message: string, successCallback, cancelCallback, id: string, error: any) {\r\n        this.addToast({\r\n            id: id || null,\r\n            error: error,\r\n            type: 'error',\r\n            message: message || 'Unknown error.',\r\n            actions: ['ok'],\r\n            successCallback: successCallback,\r\n            cancelCallback: cancelCallback\r\n        });\r\n    }\r\n\r\n    public hideAllToasts(): void {\r\n        this._$mdToast.cancel();\r\n        this.toasts = [];\r\n    }\r\n\r\n    public clearToasts(type?: string) {\r\n        if (type) {\r\n            // pipAssert.isString(type, 'pipToasts.clearToasts: type should be a string');\r\n            this.removeToasts(type);\r\n        } else {\r\n            this._$mdToast.cancel();\r\n            this.toasts = [];\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n(() => {\r\n    angular\r\n        .module('pipToasts', ['ngMaterial', 'pipControls.Translate'])\r\n        .service('pipToasts', ToastService);\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('color_picker/color_picker.html',\n    '<ul class=\"pip-color-picker {{vm.class}}\" pip-selected=\"vm.currentColorIndex\" pip-enter-space-press=\"vm.enterSpacePress($event)\">\\n' +\n    '    <li tabindex=\"-1\" ng-repeat=\"color in vm.colors track by color\">\\n' +\n    '        <md-button  tabindex=\"-1\" class=\"md-icon-button pip-selectable\" ng-click=\"vm.selectColor($index)\" aria-label=\"color\" ng-disabled=\"vm.disabled()\">\\n' +\n    '            <md-icon ng-style=\"{\\'color\\': color}\" md-svg-icon=\"icons:{{ color == vm.currentColor ? \\'circle\\' : \\'radio-off\\' }}\">\\n' +\n    '            </md-icon>\\n' +\n    '        </md-button>\\n' +\n    '    </li>\\n' +\n    '</ul>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('popover/popover.html',\n    '<div ng-if=\"vm.templateUrl\" class=\\'pip-popover flex layout-column\\'\\n' +\n    '     ng-click=\"vm.onPopoverClick($event)\" ng-include=\"vm.templateUrl\">\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div ng-if=\"vm.template\" class=\\'pip-popover\\' ng-click=\"vm.onPopoverClick($event)\">\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('progress/routing_progress.html',\n    '<div class=\"pip-routing-progress layout-column layout-align-center-center\"\\n' +\n    '        ng-show=\"vm.showProgress()\">\\n' +\n    '     <!--ng-show=\"$routing || $reset || toolInitialized\">-->\\n' +\n    '    <div class=\"loader\">\\n' +\n    '        <svg class=\"circular\" viewBox=\"25 25 50 50\">\\n' +\n    '            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\\n' +\n    '        </svg>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <img src=\"\"  height=\"40\" width=\"40\" class=\"pip-img\">\\n' +\n    '\\n' +\n    '    <md-progress-circular md-diameter=\"96\"\\n' +\n    '                          class=\"fix-ie\"></md-progress-circular>\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('toast/toast.html',\n    '<md-toast class=\"md-action pip-toast\"\\n' +\n    '          ng-class=\"{\\'pip-error\\': vm.toast.type==\\'error\\',\\n' +\n    '          \\'pip-column-toast\\': vm.toast.actions.length > 1 || vm.actionLenght > 4,\\n' +\n    '          \\'pip-no-action-toast\\': vm.actionLenght == 0}\"\\n' +\n    '          style=\"height:initial; max-height: initial; \">\\n' +\n    '\\n' +\n    '    <span class=\"flex-var pip-text\" ng-bind-html=\"vm.message\"></span>\\n' +\n    '    <div class=\"layout-row layout-align-end-start pip-actions\" ng-if=\"vm.actions.length > 0 || (vm.toast.type==\\'error\\' && vm.toast.error)\">\\n' +\n    '        <div class=\"flex\" ng-if=\"vm.toast.actions.length > 1\"> </div>\\n' +\n    '            <md-button class=\"flex-fixed pip-toast-button\" ng-if=\"vm.toast.type==\\'error\\' && vm.toast.error && vm.showDetails\" ng-click=\"vm.onDetails()\">Details</md-button>\\n' +\n    '            <md-button class=\"flex-fixed pip-toast-button\"\\n' +\n    '                    ng-click=\"vm.onAction(action)\"\\n' +\n    '                    ng-repeat=\"action in vm.actions\"\\n' +\n    '                    aria-label=\"{{::action| translate}}\">\\n' +\n    '                {{::action| translate}}\\n' +\n    '            </md-button>\\n' +\n    '       \\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '</md-toast>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-controls-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}