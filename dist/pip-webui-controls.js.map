{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/color_picker/color_picker.ts","src/controls.ts","src/dependencies/translate.ts","src/image_slider/image_slider.ts","src/image_slider/image_slider_service.ts","src/image_slider/slider_button.ts","src/image_slider/slider_indicator.ts","src/markdown/markdown.ts","src/popover/popover.ts","src/popover/popover_service.ts","src/progress/routing_progress.ts","src/toast/toasts.ts","temp/pip-webui-controls-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-controls.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipColorPicker', [ 'pipControls.Templates']); // 'pipFocused',\n\n    thisModule.directive('pipColorPicker',\n        function () {\n            return {\n                restrict: 'EA',\n                scope: {\n                    ngDisabled: '&',\n                    colors: '=pipColors',\n                    currentColor: '=ngModel',\n                    colorChange: '&ngChange'\n                },\n                templateUrl: 'color_picker/color_picker.html',\n                controller: 'pipColorPickerController'\n            };\n        }\n    );\n    thisModule.controller('pipColorPickerController',\n        function ($scope, $element, $attrs, $timeout) {\n            var\n                DEFAULT_COLORS = ['purple', 'lightgreen', 'green', 'darkred', 'pink', 'yellow', 'cyan'];\n\n            $scope.class = $attrs.class || '';\n\n            if (!$scope.colors || _.isArray($scope.colors) && $scope.colors.length === 0) {\n                $scope.colors = DEFAULT_COLORS;\n            }\n\n            $scope.currentColor = $scope.currentColor || $scope.colors[0];\n            $scope.currentColorIndex = $scope.colors.indexOf($scope.currentColor);\n\n            $scope.disabled = function () {\n                if ($scope.ngDisabled) {\n                    return $scope.ngDisabled();\n                }\n\n                return true;\n            };\n\n            $scope.selectColor = function (index) {\n                if ($scope.disabled()) {\n                    return;\n                }\n                $scope.currentColorIndex = index;\n\n                $scope.currentColor = $scope.colors[$scope.currentColorIndex];\n\n                $timeout(function () {\n                    $scope.$apply();\n                });\n\n                if ($scope.colorChange) {\n                    $scope.colorChange();\n                }\n            };\n\n            $scope.enterSpacePress = function (event) {\n                $scope.selectColor(event.index);\n            };\n        }\n    );\n\n})();\n","﻿/// <reference path=\"../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    angular.module('pipControls', [\n        'pipMarkdown',\n        'pipColorPicker',\n        'pipRoutingProgress',\n        'pipPopover',\n        'pipImageSlider',\n        'pipToasts',\n        'pipControls.Translate'\n    ]);\n\n})();\n\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipControls.Translate', []);\n\n    thisModule.filter('translate', function ($injector) {\n        var pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    });\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipImageSlider', ['pipSliderButton', 'pipSliderIndicator', 'pipImageSlider.Service']);\n\n    thisModule.directive('pipImageSlider',\n        function () {\n            return {\n                scope: {\n                    sliderIndex: '=pipImageIndex'\n                },\n                controller: function ($scope, $element, $attrs, $parse, $timeout, $interval, $pipImageSlider) {\n                    var blocks,\n                        index = 0, newIndex,\n                        direction,\n                        type = $parse($attrs.pipAnimationType)($scope),\n                        DEFAULT_INTERVAL = 4500,\n                        interval = $parse($attrs.pipAnimationInterval)($scope),\n                        timePromises,\n                        throttled;\n\n                    $element.addClass('pip-image-slider');\n                    $element.addClass('pip-animation-' + type);\n\n                    $scope.swipeStart = 0;\n                    /*\n                     if ($swipe)\n                     $swipe.bind($element, {\n                     'start': function(coords) {\n                     if (coords) $scope.swipeStart = coords.x;\n                     else $scope.swipeStart = 0;\n                     },\n                     'end': function(coords) {\n                     var delta;\n                     if (coords) {\n                     delta = $scope.swipeStart - coords.x;\n                     if (delta > 150)  $scope.nextBlock();\n                     if (delta < -150)  $scope.prevBlock();\n                     $scope.swipeStart = 0;\n                     } else $scope.swipeStart = 0;\n                     }\n                     });\n                     */\n                    setIndex();\n\n                    $timeout(function () {\n                        blocks = $element.find('.pip-animation-block');\n                        if (blocks.length > 0) {\n                            $(blocks[0]).addClass('pip-show');\n                        }\n                    });\n\n                    startInterval();\n                    throttled = _.throttle(function () {\n                        $pipImageSlider.toBlock(type, blocks, index, newIndex, direction);\n                        index = newIndex;\n                        setIndex();\n                    }, 700);\n\n                    $scope.nextBlock = function () {\n                        restartInterval();\n                        newIndex = index + 1 === blocks.length ? 0 : index + 1;\n                        direction = 'next';\n                        throttled();\n                    };\n\n                    $scope.prevBlock = function () {\n                        restartInterval();\n                        newIndex = index - 1 < 0 ? blocks.length - 1 : index - 1;\n                        direction = 'prev';\n                        throttled();\n                    };\n\n                    $scope.slideTo = function (nextIndex) {\n                        if (nextIndex === index || nextIndex > blocks.length - 1) {\n                            return;\n                        }\n\n                        restartInterval();\n                        newIndex = nextIndex;\n                        direction = nextIndex > index ? 'next' : 'prev';\n                        throttled();\n                    };\n                    \n                    if ($attrs.id) $pipImageSlider.registerSlider($attrs.id, $scope);\n\n                    function setIndex() {\n                        if ($attrs.pipImageIndex) $scope.sliderIndex = index;\n                    }\n\n                    function startInterval() {\n                        timePromises = $interval(function () {\n                            newIndex = index + 1 === blocks.length ? 0 : index + 1;\n                            direction = 'next';\n                            throttled();\n                        }, interval || DEFAULT_INTERVAL);\n                    }\n\n                    function stopInterval() {\n                        $interval.cancel(timePromises);\n                    }\n\n                    $element.on('$destroy', function () {\n                        stopInterval();\n                        $pipImageSlider.removeSlider($attrs.id);\n                    });\n\n                    function restartInterval() {\n                        stopInterval();\n                        startInterval();\n                    }\n                }\n            };\n        }\n    );\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipImageSlider.Service', []);\n\n    thisModule.service('$pipImageSlider',\n        function ($timeout) {\n\n            var ANIMATION_DURATION = 550,\n                sliders = {};\n\n            return {\n                nextCarousel: nextCarousel,\n                prevCarousel: prevCarousel,\n                toBlock: toBlock,\n                registerSlider: register,\n                removeSlider: remove,\n                getSliderScope: getSlider\n            };\n\n            function register(sliderId, sliderScope) {\n                sliders[sliderId] = sliderScope;\n            }\n            \n            function remove(sliderId) {\n                delete sliders[sliderId];\n            }\n\n            function getSlider(sliderId) {\n                return sliders[sliderId];\n            }\n\n            function nextCarousel(nextBlock, prevBlock) {\n                nextBlock.addClass('pip-next');\n                \n                $timeout(function () {\n                    nextBlock.addClass('animated').addClass('pip-show').removeClass('pip-next');\n                    prevBlock.addClass('animated').removeClass('pip-show');\n                }, 100);\n            }\n\n            function prevCarousel(nextBlock, prevBlock) {\n                $timeout(function () {\n                    nextBlock.addClass('animated').addClass('pip-show');\n                    prevBlock.addClass('animated').addClass('pip-next').removeClass('pip-show');\n                }, 100);\n            }\n\n            function toBlock(type, blocks, oldIndex, nextIndex, direction) {\n                var prevBlock = $(blocks[oldIndex]),\n                    blockIndex = nextIndex,\n                    nextBlock = $(blocks[blockIndex]);\n\n                if (type === 'carousel') {\n                    $(blocks).removeClass('pip-next').removeClass('pip-prev').removeClass('animated');\n\n                    if (direction && (direction === 'prev' || direction === 'next')) {\n                        if (direction === 'prev') {\n                            prevCarousel(nextBlock, prevBlock);\n                        } else {\n                            nextCarousel(nextBlock, prevBlock);\n                        }\n                    } else {\n                        if (nextIndex && nextIndex < oldIndex) {\n                            prevCarousel(nextBlock, prevBlock);\n                        } else {\n                            nextCarousel(nextBlock, prevBlock);\n                        }\n                    }\n                } else {\n                    prevBlock.addClass('animated').removeClass('pip-show');\n                    nextBlock.addClass('animated').addClass('pip-show');\n                }\n            }\n        }\n    );\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipSliderButton', []);\n\n    thisModule.directive('pipSliderButton',\n        function () {\n            return {\n                scope: {},\n                controller: function ($scope, $element, $parse, $attrs, $pipImageSlider) {\n                    var type = $parse($attrs.pipButtonType)($scope),\n                        sliderId = $parse($attrs.pipSliderId)($scope);\n\n                    $element.on('click', function () {\n                        if (!sliderId || !type) {\n                            return;\n                        }\n\n                        $pipImageSlider.getSliderScope(sliderId)[type + 'Block']();\n                    });\n                }\n            };\n        }\n    );\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipSliderIndicator', []);\n\n    thisModule.directive('pipSliderIndicator',\n        function () {\n            return {\n                scope: false,\n                controller: function ($scope, $element, $parse, $attrs, $pipImageSlider) {\n                    var sliderId = $parse($attrs.pipSliderId)($scope),\n                        slideTo = $parse($attrs.pipSlideTo)($scope);\n\n                    $element.css('cursor', 'pointer');\n                    $element.on('click', function () {\n                        if (!sliderId || slideTo && slideTo < 0) {\n                            return;\n                        }\n\n                        $pipImageSlider.getSliderScope(sliderId).slideTo(slideTo);\n                    });\n                }\n            };\n        }\n    );\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\ndeclare var marked: any;\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipMarkdown', ['ngSanitize']);\n\n    thisModule.run(function ($injector) {\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.setTranslations('en', {\n                'MARKDOWN_ATTACHMENTS': 'Attachments:',\n                'checklist': 'Checklist',\n                'documents': 'Documents',\n                'pictures': 'Pictures',\n                'location': 'Location',\n                'time': 'Time'\n            });\n            pipTranslate.setTranslations('ru', {\n                'MARKDOWN_ATTACHMENTS': 'Вложения:',\n                'checklist': 'Список',\n                'documents': 'Документы',\n                'pictures': 'Изображения',\n                'location': 'Местонахождение',\n                'time': 'Время'\n            });\n        }\n    });\n\n    thisModule.directive('pipMarkdown',\n        function ($parse, $injector) {\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n            return {\n                restrict: 'EA',\n                scope: false,\n                link: function ($scope: any, $element, $attrs: any) {\n                    var\n                        textGetter = $parse($attrs.pipText),\n                        listGetter = $parse($attrs.pipList),\n                        clampGetter = $parse($attrs.pipLineCount);\n\n                    function describeAttachments(array) {\n                        var attachString = '',\n                            attachTypes = [];\n\n                        _.each(array, function (attach) {\n                            if (attach.type && attach.type !== 'text') {\n                                if (attachString.length === 0 && pipTranslate) {\n                                    attachString = pipTranslate.translate('MARKDOWN_ATTACHMENTS');\n                                }\n\n                                if (attachTypes.indexOf(attach.type) < 0) {\n                                    attachTypes.push(attach.type);\n                                    attachString += attachTypes.length > 1 ? ', ' : ' ';\n                                    if (pipTranslate)\n                                        attachString += pipTranslate.translate(attach.type);\n                                }\n                            }\n                        });\n\n                        return attachString;\n                    }\n\n                    function toBoolean(value) {\n                        if (value == null) return false;\n                        if (!value) return false;\n                        value = value.toString().toLowerCase();\n                        return value == '1' || value == 'true';\n                    }\n\n                    function bindText(value) {\n                        var textString, isClamped, height, options, obj;\n\n                        if (_.isArray(value)) {\n                            obj = _.find(value, function (item: any) {\n                                return item.type === 'text' && item.text;\n                            });\n\n                            textString = obj ? obj.text : describeAttachments(value);\n                        } else {\n                            textString = value;\n                        }\n\n                        isClamped = $attrs.pipLineCount && _.isNumber(clampGetter());\n                        isClamped = isClamped && textString && textString.length > 0;\n                        options = {\n                            gfm: true,\n                            tables: true,\n                            breaks: true,\n                            sanitize: true,\n                            pedantic: true,\n                            smartLists: true,\n                            smartypents: false\n                        };\n                        textString = marked(textString || '', options);\n                        if (isClamped) {\n                            height = 1.5 * clampGetter();\n                        }\n                        // Assign value as HTML\n                        $element.html('<div' + (isClamped ? listGetter() ? 'class=\"pip-markdown-content ' +\n                            'pip-markdown-list\" style=\"max-height: ' + height + 'em\">'\n                                : ' class=\"pip-markdown-content\" style=\"max-height: ' + height + 'em\">' : listGetter()\n                                ? ' class=\"pip-markdown-list\">' : '>') + textString + '</div>');\n                        $element.find('a').attr('target', 'blank');\n                        if (!listGetter() && isClamped) {\n                            $element.append('<div class=\"pip-gradient-block\"></div>');\n                        }\n                    }\n\n                    // Fill the text\n                    bindText(textGetter($scope));\n\n                    // Also optimization to avoid watch if it is unnecessary\n                    if (toBoolean($attrs.pipRebind)) {\n                        $scope.$watch(textGetter, function (newValue) {\n                            bindText(newValue);\n                        });\n                    }\n\n                    $scope.$on('pipWindowResized', function () {\n                        bindText(textGetter($scope));\n                    });\n\n                    // Add class\n                    $element.addClass('pip-markdown');\n                }\n            };\n        }\n    );\n\n})();\n\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipPopover', ['pipPopover.Service']);\n\n    thisModule.directive('pipPopover', function () {\n        return {\n            restrict: 'EA',\n            scope: true,\n            templateUrl: 'popover/popover.html',\n            controller: function ($scope, $rootScope, $element, $timeout, $compile) {\n                var backdropElement, content;\n\n                backdropElement = $('.pip-popover-backdrop');\n                backdropElement.on('click keydown scroll', backdropClick);\n                backdropElement.addClass($scope.params.responsive !== false ? 'pip-responsive' : '');\n\n                $timeout(function () {\n                    position();\n                    if ($scope.params.template) {\n                        content = $compile($scope.params.template)($scope);\n                        $element.find('.pip-popover').append(content);\n                    }\n\n                    init();\n                });\n\n                $timeout(function () {\n                    calcHeight();\n                }, 200);\n\n                $scope.onPopoverClick = onPopoverClick;\n                $scope = _.defaults($scope, $scope.$parent);    // eslint-disable-line \n\n                $rootScope.$on('pipPopoverResize', onResize);\n                $(window).resize(onResize);\n\n                function init() {\n                    backdropElement.addClass('opened');\n                    $('.pip-popover-backdrop').focus();\n                    if ($scope.params.timeout) {\n                        $timeout(function () {\n                            closePopover();\n                        }, $scope.params.timeout);\n                    }\n                }\n\n                function backdropClick() {\n                    if ($scope.params.cancelCallback) {\n                        $scope.params.cancelCallback();\n                    }\n\n                    closePopover();\n                }\n\n                function closePopover() {\n                    backdropElement.removeClass('opened');\n                    $timeout(function () {\n                        backdropElement.remove();\n                    }, 100);\n                }\n\n                function onPopoverClick($e) {\n                    $e.stopPropagation();\n                }\n\n                function position() {\n                    if ($scope.params.element) {\n                        var element = $($scope.params.element),\n                            pos = element.offset(),\n                            width = element.width(),\n                            height = element.height(),\n                            docWidth = $(document).width(),\n                            docHeight = $(document).height(),\n                            popover = backdropElement.find('.pip-popover');\n\n                        if (pos) {\n                            popover\n                                .css('max-width', docWidth - (docWidth - pos.left))\n                                .css('max-height', docHeight - (pos.top + height) - 32, 0)\n                                .css('left', pos.left - popover.width() + width / 2)\n                                .css('top', pos.top + height + 16);\n                        }\n                    }\n                }\n\n                function calcHeight() {\n                    if ($scope.params.calcHeight === false) { return; }\n\n                    var popover = backdropElement.find('.pip-popover'),\n                        title = popover.find('.pip-title'),\n                        footer = popover.find('.pip-footer'),\n                        content = popover.find('.pip-content'),\n                        contentHeight = popover.height() - title.outerHeight(true) - footer.outerHeight(true);\n\n                    content.css('max-height', Math.max(contentHeight, 0) + 'px').css('box-sizing', 'border-box');\n                }\n\n                function onResize() {\n                    backdropElement.find('.pip-popover').find('.pip-content').css('max-height', '100%');\n                    position();\n                    calcHeight();\n                }\n            }\n        };\n    });\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipPopover.Service', []);\n\n    thisModule.service('pipPopoverService',\n        function ($compile, $rootScope, $timeout) {\n            var popoverTemplate;\n\n            popoverTemplate = \"<div class='pip-popover-backdrop {{ params.class }}' ng-controller='params.controller'\" +\n                \" tabindex='1'> <pip-popover pip-params='params'> </pip-popover> </div>\";\n\n            return {\n                show: onShow,\n                hide: onHide,\n                resize: onResize\n            };\n\n            function onShow(p) {\n                var element, scope, params, content;\n\n                element = $('body');\n                if (element.find('md-backdrop').length > 0) { return; }\n                onHide();\n                scope = $rootScope.$new();\n                params = p && _.isObject(p) ? p : {};\n                scope.params = params;\n                scope.locals = params.locals;\n                content = $compile(popoverTemplate)(scope);\n                element.append(content);\n            }\n\n            function onHide() {\n                var backdropElement = $('.pip-popover-backdrop');\n\n                backdropElement.removeClass('opened');\n                $timeout(function () {\n                    backdropElement.remove();\n                }, 100);\n            }\n\n            function onResize() {\n                $rootScope.$broadcast('pipPopoverResize');\n            }\n\n        }\n    );\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipRoutingProgress', ['ngMaterial']);\n\n    thisModule.directive('pipRoutingProgress', function () {\n        return {\n            restrict: 'EA',\n            replace: true,\n            scope: {\n                    showProgress: '&',\n                    logoUrl: '@'\n                },\n            templateUrl: 'progress/routing_progress.html',\n            controller: 'pipRoutingProgressController'\n        };\n    });\n\n    thisModule.controller('pipRoutingProgressController',\n        function ($scope, $element, $attrs) {\n            var  image = $element.children('img');          \n\n            loadProgressImage();\n\n            return;\n\n            function loadProgressImage() {\n                if ($scope.logoUrl) {\n                    image.attr('src', $scope.logoUrl);\n                }\n            }\n\n        }\n    );\n\n})();\n","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n    var thisModule = angular.module('pipToasts', ['ngMaterial', 'pipControls.Translate']);\n\n    thisModule.controller('pipToastController',\n        function ($scope, $mdToast, toast, $injector) {\n            var pipErrorDetailsDialog = $injector.has('pipErrorDetailsDialog') \n                ? $injector.get('pipErrorDetailsDialog') : null;\n\n            // if (toast.type && sounds['toast_' + toast.type]) {\n            //     sounds['toast_' + toast.type].play();\n            // }\n\n            $scope.message = toast.message;\n            $scope.actions = toast.actions;\n            $scope.toast = toast;\n            \n            if (toast.actions.length === 0) {\n                $scope.actionLenght = 0;\n            } else if (toast.actions.length === 1) {\n                $scope.actionLenght = toast.actions[0].toString().length;\n            } else {\n                $scope.actionLenght = null;\n            }\n\n            $scope.showDetails = pipErrorDetailsDialog != null;\n            $scope.onDetails = function () {\n                $mdToast.hide();\n\n                if (pipErrorDetailsDialog) {\n                    pipErrorDetailsDialog.show(\n                        {\n                            error: $scope.toast.error,\n                            ok: 'Ok'\n                        },\n                        angular.noop,\n                        angular.noop\n                    );\n                }\n            };\n\n            $scope.onAction = function (action) {\n                $mdToast.hide(\n                    {\n                        action: action,\n                        id: toast.id,\n                        message: toast.message\n                    });\n            };\n        }\n    );\n\n    thisModule.service('pipToasts',\n        function ($rootScope, $mdToast) {\n            var\n                SHOW_TIMEOUT = 20000,\n                SHOW_TIMEOUT_NOTIFICATIONS = 20000,\n                toasts = [],\n                currentToast,\n                sounds = {};\n\n            /** pre-load sounds for notifications */\n                // sounds['toast_error'] = ngAudio.load('sounds/fatal.mp3');\n                // sounds['toast_notification'] = ngAudio.load('sounds/error.mp3');\n                // sounds['toast_message'] = ngAudio.load('sounds/warning.mp3');\n\n                // Remove error toasts when page is changed\n            $rootScope.$on('$stateChangeSuccess', onStateChangeSuccess);\n            $rootScope.$on('pipSessionClosed', onClearToasts);\n            $rootScope.$on('pipIdentityChanged', onClearToasts);\n\n            return {\n                showNotification: showNotification,\n                showMessage: showMessage,\n                showError: showError,\n                hideAllToasts: hideAllToasts,\n                clearToasts: clearToasts,\n                removeToastsById: removeToastsById,\n                getToastById: getToastById\n            };\n\n            // Take the next from queue and show it\n            function showNextToast() {\n                var toast;\n\n                if (toasts.length > 0) {\n                    toast = toasts[0];\n                    toasts.splice(0, 1);\n                    showToast(toast);\n                }\n            }\n\n            // Show toast\n            function showToast(toast) {\n                currentToast = toast;\n\n                $mdToast.show({\n                    templateUrl: 'toast/toast.html',\n                    hideDelay: toast.duration || SHOW_TIMEOUT,\n                    position: 'bottom left',\n                    controller: 'pipToastController',\n                    locals: {\n                        toast: currentToast,\n                        sounds: sounds\n                    }\n                })\n                    .then(\n                    function showToastOkResult(action) {\n                        if (currentToast.successCallback) {\n                            currentToast.successCallback(action);\n                        }\n                        currentToast = null;\n                        showNextToast();\n                    },\n                    function showToastCancelResult(action) {\n                        if (currentToast.cancelCallback) {\n                            currentToast.cancelCallback(action);\n                        }\n                        currentToast = null;\n                        showNextToast();\n                    }\n                );\n            }\n\n            function addToast(toast) {\n                if (currentToast && toast.type !== 'error') {\n                    toasts.push(toast);\n                } else {\n                    showToast(toast);\n                }\n            }\n\n            function removeToasts(type) {\n                var result = [];\n\n                _.each(toasts, function (toast) {\n                    if (!toast.type || toast.type !== type) {\n                        result.push(toast);\n                    }\n                });\n                toasts = _.cloneDeep(result);\n            }\n\n            function removeToastsById(id) {\n                _.remove(toasts, {id: id});\n            }\n\n            function getToastById(id) {\n                return _.find(toasts, {id: id});\n            }\n\n            function onStateChangeSuccess() {\n                // toasts = _.reject(toasts, function (toast) {\n                //     return toast.type === 'error';\n                // });\n\n                // if (currentToast && currentToast.type === 'error') {\n                //     $mdToast.cancel();\n                //     showNextToast();\n                // }\n            }\n\n            function onClearToasts() {\n                clearToasts();\n            }\n\n            // Show new notification toast at the top right\n            function showNotification(message, actions, successCallback, cancelCallback, id) {\n                // pipAssert.isDef(message, 'pipToasts.showNotification: message should be defined');\n                // pipAssert.isString(message, 'pipToasts.showNotification: message should be a string');\n                // pipAssert.isArray(actions || [], 'pipToasts.showNotification: actions should be an array');\n                // if (successCallback) {\n                //     pipAssert.isFunction(successCallback, 'showNotification: successCallback should be a function');\n                // }\n                // if (cancelCallback) {\n                //     pipAssert.isFunction(cancelCallback, 'showNotification: cancelCallback should be a function');\n                // }\n\n                addToast({\n                    id: id || null,\n                    type: 'notification',\n                    message: message,\n                    actions: actions || ['ok'],\n                    successCallback: successCallback,\n                    cancelCallback: cancelCallback,\n                    duration: SHOW_TIMEOUT_NOTIFICATIONS\n                });\n            }\n\n            // Show new message toast at the top right\n            function showMessage(message, successCallback, cancelCallback, id) {\n                // pipAssert.isDef(message, 'pipToasts.showMessage: message should be defined');\n                // pipAssert.isString(message, 'pipToasts.showMessage: message should be a string');\n                // if (successCallback) {\n                //     pipAssert.isFunction(successCallback, 'pipToasts.showMessage:successCallback should be a function');\n                // }\n                // if (cancelCallback) {\n                //     pipAssert.isFunction(cancelCallback, 'pipToasts.showMessage: cancelCallback should be a function');\n                // }\n\n                addToast({\n                    id: id || null,\n                    type: 'message',\n                    message: message,\n                    actions: ['ok'],\n                    successCallback: successCallback,\n                    cancelCallback: cancelCallback\n                });\n            }\n\n            // Show error toast at the bottom right after error occured\n            function showError(message, successCallback, cancelCallback, id, error) {\n                // pipAssert.isDef(message, 'pipToasts.showError: message should be defined');\n                // pipAssert.isString(message, 'pipToasts.showError: message should be a string');\n                // if (successCallback) {\n                //     pipAssert.isFunction(successCallback, 'pipToasts.showError: successCallback should be a function');\n                // }\n                // if (cancelCallback) {\n                //     pipAssert.isFunction(cancelCallback, 'pipToasts.showError: cancelCallback should be a function');\n                // }\n\n                addToast({\n                    id: id || null,\n                    error: error,\n                    type: 'error',\n                    message: message || 'Unknown error.',\n                    actions: ['ok'],\n                    successCallback: successCallback,\n                    cancelCallback: cancelCallback\n                });\n            }\n\n            // Hide and clear all toast when user signs out\n            function hideAllToasts() {\n                $mdToast.cancel();\n                toasts = [];\n            }\n\n            // Clear toasts by type\n            function clearToasts(type?: any) {\n                if (type) {\n                    // pipAssert.isString(type, 'pipToasts.clearToasts: type should be a string');\n                    removeToasts(type);\n                } else {\n                    $mdToast.cancel();\n                    toasts = [];\n                }\n            }\n        }\n    );\n\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('color_picker/color_picker.html',\n    '<ul class=\"pip-color-picker {{class}}\" pip-selected=\"currentColorIndex\" pip-enter-space-press=\"enterSpacePress($event)\"><li tabindex=\"-1\" ng-repeat=\"color in colors track by color\"><md-button tabindex=\"-1\" class=\"md-icon-button pip-selectable\" ng-click=\"selectColor($index)\" aria-label=\"color\" ng-disabled=\"disabled()\"><md-icon ng-style=\"{\\'color\\': color}\" md-svg-icon=\"icons:{{ color == currentColor ? \\'circle\\' : \\'radio-off\\' }}\"></md-icon></md-button></li></ul>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('popover/popover.html',\n    '<div ng-if=\"params.templateUrl\" class=\"pip-popover flex layout-column\" ng-click=\"onPopoverClick($event)\" ng-include=\"params.templateUrl\"></div><div ng-if=\"params.template\" class=\"pip-popover\" ng-click=\"onPopoverClick($event)\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('progress/routing_progress.html',\n    '<div class=\"pip-routing-progress layout-column layout-align-center-center\" ng-show=\"showProgress()\"><div class=\"loader\"><svg class=\"circular\" viewbox=\"25 25 50 50\"><circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle></svg></div><img src=\"\" height=\"40\" width=\"40\" class=\"pip-img\"><md-progress-circular md-diameter=\"96\" class=\"fix-ie\"></md-progress-circular></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipControls.Templates');\n} catch (e) {\n  module = angular.module('pipControls.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('toast/toast.html',\n    '<md-toast class=\"md-action pip-toast\" ng-class=\"{\\'pip-error\\': toast.type==\\'error\\', \\'pip-column-toast\\': toast.actions.length > 1 || actionLenght > 4, \\'pip-no-action-toast\\': actionLenght == 0}\" style=\"height:initial; max-height: initial;\"><span class=\"flex-var pip-text\" ng-bind-html=\"message\"></span><div class=\"layout-row layout-align-end-start pip-actions\" ng-if=\"actions.length > 0 || (toast.type==\\'error\\' && toast.error)\"><div class=\"flex\" ng-if=\"toast.actions.length > 1\"></div><md-button class=\"flex-fixed pip-toast-button\" ng-if=\"toast.type==\\'error\\' && toast.error && showDetails\" ng-click=\"onDetails()\">Details</md-button><md-button class=\"flex-fixed pip-toast-button\" ng-click=\"onAction(action)\" ng-repeat=\"action in actions\" aria-label=\"{{::action| translate}}\">{{::action| translate}}</md-button></div></md-toast>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-controls-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}